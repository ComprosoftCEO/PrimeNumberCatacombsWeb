{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://prime-number-catacombs/webpack/runtime/async module","webpack://prime-number-catacombs/webpack/runtime/chunk loaded","webpack://prime-number-catacombs/./src/areas/MainArea.ts","webpack://prime-number-catacombs/./src/areas/TitleArea.ts","webpack://prime-number-catacombs/./src/engine/assets.ts","webpack://prime-number-catacombs/./src/engine/timerEntry.ts","webpack://prime-number-catacombs/./src/engine/collision.ts","webpack://prime-number-catacombs/./src/engine/entity.ts","webpack://prime-number-catacombs/./src/engine/audio.ts","webpack://prime-number-catacombs/./src/engine/area.ts","webpack://prime-number-catacombs/./src/engine/storage.ts","webpack://prime-number-catacombs/./src/engine/game.ts","webpack://prime-number-catacombs/./src/engine/helpers.ts","webpack://prime-number-catacombs/./src/engine/input.ts","webpack://prime-number-catacombs/./src/entities/Constants.ts","webpack://prime-number-catacombs/./src/entities/MazeCamera.ts","webpack://prime-number-catacombs/./src/entities/effects/DeadEndAnimation.ts","webpack://prime-number-catacombs/./src/entities/effects/FadeInEffect.ts","webpack://prime-number-catacombs/./src/entities/effects/FadeOutEffect.ts","webpack://prime-number-catacombs/./src/entities/effects/TorchTimer.ts","webpack://prime-number-catacombs/./src/entities/layout/ArchGroup.ts","webpack://prime-number-catacombs/./src/entities/layout/BlankWallGroup.ts","webpack://prime-number-catacombs/./src/entities/layout/Graffiti.ts","webpack://prime-number-catacombs/./src/entities/layout/MazeFloor.ts","webpack://prime-number-catacombs/./src/entities/layout/SideWall.ts","webpack://prime-number-catacombs/./src/index.ts","webpack://prime-number-catacombs/./src/fonts.css","webpack://prime-number-catacombs/./src/styles.css","webpack://prime-number-catacombs/../wasm/pkg/prime_number_catacombs_bg.js","webpack://prime-number-catacombs/./src/fonts.css?ae24","webpack://prime-number-catacombs/./src/styles.css?44b2","webpack://prime-number-catacombs/../wasm/pkg|sync","webpack://prime-number-catacombs/webpack/bootstrap","webpack://prime-number-catacombs/webpack/runtime/amd define","webpack://prime-number-catacombs/webpack/runtime/amd options","webpack://prime-number-catacombs/webpack/runtime/compat get default export","webpack://prime-number-catacombs/webpack/runtime/define property getters","webpack://prime-number-catacombs/webpack/runtime/global","webpack://prime-number-catacombs/webpack/runtime/harmony module decorator","webpack://prime-number-catacombs/webpack/runtime/hasOwnProperty shorthand","webpack://prime-number-catacombs/webpack/runtime/make namespace object","webpack://prime-number-catacombs/webpack/runtime/node module decorator","webpack://prime-number-catacombs/webpack/runtime/publicPath","webpack://prime-number-catacombs/webpack/runtime/jsonp chunk loading","webpack://prime-number-catacombs/webpack/runtime/wasm chunk loading","webpack://prime-number-catacombs/webpack/startup"],"sourcesContent":["var webpackThen = typeof Symbol === \"function\" ? Symbol(\"webpack then\") : \"__webpack_then__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar completeQueue = (queue) => {\n\tif(queue) {\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar completeFunction = (fn) => (!--fn.r && fn());\nvar queueFunction = (queue, fn) => (queue ? queue.push(fn) : completeFunction(fn));\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackThen]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tcompleteQueue(queue);\n\t\t\t\tqueue = 0;\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\t\t\t\t\t\t\t\tobj[webpackThen] = (fn, reject) => (queueFunction(queue, fn), dep.catch(reject));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\t\t\t\t\t\tret[webpackThen] = (fn) => (completeFunction(fn));\n\t\t\t\t\t\tret[webpackExports] = dep;\n\t\t\t\t\t\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue = hasAwait && [];\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar isEvaluating = true;\n\tvar nested = false;\n\tvar whenAll = (deps, onResolve, onReject) => {\n\t\tif (nested) return;\n\t\tnested = true;\n\t\tonResolve.r += deps.length;\n\t\tdeps.map((dep, i) => (dep[webpackThen](onResolve, onReject)));\n\t\tnested = false;\n\t};\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = () => (resolve(exports), completeQueue(queue), queue = 0);\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackThen] = (fn, rejectFn) => {\n\t\tif (isEvaluating) { return completeFunction(fn); }\n\t\tif (currentDeps) whenAll(currentDeps, fn, rejectFn);\n\t\tqueueFunction(queue, fn);\n\t\tpromise.catch(rejectFn);\n\t};\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tif(!deps) return outerResolve();\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn, result;\n\t\tvar promise = new Promise((resolve, reject) => {\n\t\t\tfn = () => (resolve(result = currentDeps.map((d) => (d[webpackExports]))));\n\t\t\tfn.r = 0;\n\t\t\twhenAll(currentDeps, fn, reject);\n\t\t});\n\t\treturn fn.r ? promise : result;\n\t}).then(outerResolve, reject);\n\tisEvaluating = false;\n};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { Area, AreaState } from 'engine/area';\nimport { Entity } from 'engine/entity';\nimport { AudioWrapper } from 'engine/audio';\nimport { MouseButton } from 'engine/input';\nimport { randomInt, shuffleArray } from 'engine/helpers';\nimport { computeCatacombs } from 'prime-number-catacombs';\nimport { DoorSelectorArea } from './DoorSelectorArea';\nimport { FadeInEffect } from 'entities/effects/FadeInEffect';\nimport { MazeCamera } from 'entities/MazeCamera';\nimport { MazeFloor } from 'entities/layout/MazeFloor';\nimport { ArchGroup, ArchProps } from 'entities/layout/ArchGroup';\nimport { Side, SideWall } from 'entities/layout/SideWall';\nimport { TorchEntity } from 'entities/layout/TorchEntity';\nimport { BlankWallGroup, BlankWallProps } from 'entities/layout/BlankWallGroup';\nimport { BuiltInFont, Graffiti, GraffitiProps } from 'entities/layout/Graffiti';\nimport { DeadEndAnimation } from 'entities/effects/DeadEndAnimation';\nimport { TorchTimer } from 'entities/effects/TorchTimer';\nimport * as seededRandom from 'seedrandom';\n\ninterface CatacombNumber {\n  value: string;\n  isPrime: boolean;\n}\n\ntype Entry = ArchEntry | BlankWallEntry;\n\ninterface ArchEntry {\n  isArchway: true;\n  catacombNumber: CatacombNumber;\n}\n\ninterface BlankWallEntry {\n  isArchway: false;\n  showGraffiti: boolean;\n}\n\nconst GRAFFITI_PROBABILITY = 0.4;\n\nconst DEAD_END_GRAFFITI: GraffitiProps = {\n  text: 'Dead End',\n  font: {\n    fontFamily: BuiltInFont.ADrippingMarker,\n    fontSize: 96,\n    alignment: 'center',\n    color: '#550000',\n  },\n  angle: 0,\n};\n\n/**\n * Main area of the game\n */\nexport class MainArea implements AreaState, DoorSelectorArea {\n  private area: Area<this>;\n\n  private catacombNumber: CatacombNumber;\n  private base: number;\n  private allowComposite: boolean;\n\n  private entries: Entry[];\n  private torchTimer: TorchTimer;\n\n  public camera: MazeCamera;\n  public ambient: AudioWrapper;\n\n  /**\n   * Construct a new game area\n   *\n   * @param currentNumber Base-10 representation of the prime number\n   * @param base Which base to use for the numbering system (2 to 36), default is binary (2)\n   * @param allowComposite If true, then composite numbers are shown in the room\n   */\n  constructor(currentNumber: string, base = 2, allowComposite = false) {\n    this.catacombNumber = {\n      value: currentNumber,\n\n      /* Hacky: starting number is always considered prime */\n      isPrime: true,\n    };\n    this.base = base;\n    this.allowComposite = allowComposite;\n  }\n\n  public get smallestIndex(): number {\n    return 0 - Math.floor(Math.max(this.entries.length - 1, 0) / 2);\n  }\n\n  public get largestIndex(): number {\n    return 0 + Math.ceil(Math.max(this.entries.length - 1, 0) / 2);\n  }\n\n  onCreate(area: Area<this>): void {\n    this.area = area;\n\n    // Initialize the room\n    this.computeEntries();\n    this.buildArea();\n\n    // Create entity to fade the torches\n    this.torchTimer = new TorchTimer();\n    this.area.createEntity(this.torchTimer);\n\n    // Start the creepy ambient noise\n    this.ambient = this.area.createAudio('Ambient');\n    this.ambient.play(true);\n  }\n\n  /**\n   * Use the seeded PRNG to compute the entries for the area\n   */\n  private computeEntries(): void {\n    // Special case: composite numbers end the game\n    if (!this.catacombNumber.isPrime) {\n      this.entries = []; // Trap the player\n      return;\n    }\n\n    const prng = seededRandom(`${this.catacombNumber.value}-Entries`);\n\n    // Generate the prime (and possibly composite) archways\n    const catacombNumbers: CatacombNumber[] = computeCatacombs(this.catacombNumber.value, this.base);\n    const archways: ArchEntry[] = catacombNumbers\n      .filter(({ isPrime, value }) => (this.allowComposite ? value !== '0' : isPrime))\n      .map((catacombNumber) => ({ isArchway: true, catacombNumber }));\n\n    // Special case: no archways ends the game\n    if (catacombNumbers.length === 0) {\n      this.entries = []; // Trap the player\n      return;\n    }\n\n    // Generate additional \"blank\" walls to show, and randomly add graffiti to them\n    const numWalls = randomInt(0, Math.ceil(archways.length / 2), prng);\n    const blankWallEntries: BlankWallEntry[] = new Array(numWalls).fill(null).map(() => ({\n      isArchway: false,\n      showGraffiti: prng() < GRAFFITI_PROBABILITY,\n    }));\n\n    // Shuffle the order based on the seed\n    this.entries = shuffleArray([...archways, ...blankWallEntries], false, prng);\n  }\n\n  /**\n   * Build all of the objects inside the area\n   */\n  private buildArea(): void {\n    const allEntries = this.entries.map((entry, index) => ({\n      text: entry.isArchway ? entry.catacombNumber.value : undefined,\n      relativePosition: this.smallestIndex + index,\n      showGraffiti: entry.isArchway === false ? entry.showGraffiti : undefined,\n    }));\n\n    // Create the floor\n    this.area.createEntity(new MazeFloor(Math.ceil(this.entries.length / 2)));\n\n    // Create the maze archways\n    const archEntries: ArchProps[] = allEntries.filter(({ text }) => typeof text !== 'undefined');\n    if (archEntries.length > 0) {\n      this.area.createEntity(new ArchGroup(archEntries));\n    }\n\n    // Create the blank walls\n    const blankWallEntries: BlankWallProps[] = allEntries.filter(({ text }) => typeof text === 'undefined');\n    if (blankWallEntries.length > 0) {\n      this.area.createEntity(new BlankWallGroup(blankWallEntries));\n    }\n\n    // Add all of the graffiti walls\n    for (const [index, { relativePosition }] of allEntries.filter(({ showGraffiti }) => showGraffiti).entries()) {\n      this.area.createEntity(\n        new Graffiti(relativePosition, { seed: `${this.catacombNumber.value}-Graffiti-${index}` }),\n      );\n    }\n\n    // Add a blank wall if there are no numbers\n    if (this.entries.length === 0) {\n      this.area.createEntity(new BlankWallGroup([{ relativePosition: 0 }]));\n      this.area.createEntity(new Graffiti(0, DEAD_END_GRAFFITI));\n      this.area.createEntity(new DeadEndAnimation());\n    }\n\n    // Left and right side walls\n    this.area.createEntity(new SideWall(Side.Left, this.smallestIndex));\n    this.area.createEntity(new SideWall(Side.Right, this.largestIndex));\n\n    // Build the camera, start in a random location\n    const prng = seededRandom(`${this.catacombNumber.value}-Start`);\n    this.camera = new MazeCamera(randomInt(this.smallestIndex, this.largestIndex, prng));\n    this.area.createEntity(this.camera);\n\n    // Fade-in effect\n    this.area.createEntity(new FadeInEffect());\n  }\n\n  /**\n   * Called when the camera moves to this index in the room\n   */\n  public movedTo(index: number): void {\n    for (const entity of this.area.findEntities('torch-entity') as Entity<TorchEntity>[]) {\n      entity.state.setTorchPosition(index);\n    }\n  }\n\n  /**\n   * Test if you can enter a door\n   */\n  public canEnterDoor(index: number): boolean {\n    const entry = this.entries[index - this.smallestIndex];\n    return typeof entry !== 'undefined' && entry.isArchway;\n  }\n\n  /**\n   * Action fired when a door is entered\n   */\n  public enterDoor(index: number): void {\n    this.clearArea();\n\n    // Go to the next room\n    const entry = this.entries[index - this.smallestIndex];\n    if (typeof entry !== 'undefined' && entry.isArchway) {\n      this.catacombNumber = entry.catacombNumber;\n    } else {\n      // Should not happen! If it does, then trap the player...\n      this.catacombNumber.isPrime = false;\n    }\n\n    this.torchTimer.enteredDoor();\n    this.computeEntries();\n    this.buildArea();\n  }\n\n  /**\n   * Clear all of the objects inside the area\n   */\n  private clearArea(): void {\n    // Clear any room resources\n    for (const entity of this.area.findEntities('layout-entity')) {\n      entity.destroy();\n    }\n\n    // Destroy the camera\n    for (const camera of this.area.findEntities('camera')) {\n      camera.destroy();\n    }\n  }\n\n  onDispose(): void {}\n\n  onTimer(_timerIndex: number): void {}\n\n  onStep(): void {\n    // Fix for audio playing\n    const input = this.area.game.input;\n    if (input.isMouseButtonDown(MouseButton.Left)) {\n      this.ambient.audio.context.resume();\n    }\n  }\n\n  onDraw(_g2d: CanvasRenderingContext2D): void {}\n}\n","import { Area, AreaState } from 'engine/area';\nimport { Entity } from 'engine/entity';\nimport { FadeInEffect } from 'entities/effects/FadeInEffect';\nimport { ArchGroup } from 'entities/layout/ArchGroup';\nimport { TorchEntity } from 'entities/layout/TorchEntity';\nimport { MazeFloor } from 'entities/layout/MazeFloor';\nimport { MazeCamera } from 'entities/MazeCamera';\nimport { DoorSelectorArea } from './DoorSelectorArea';\nimport { MainArea } from './MainArea';\n\nenum Timer {\n  TestForMovement,\n}\n\n/**\n * Title Screen for the Game\n */\nexport class TitleArea implements AreaState, DoorSelectorArea {\n  public readonly smallestIndex = 0;\n  public readonly largestIndex = 0;\n\n  private area: Area<this>;\n  private camera: MazeCamera;\n  private hideText = false;\n\n  onCreate(area: Area<this>): void {\n    this.area = area;\n\n    this.area.createEntity(new MazeFloor());\n    this.area.createEntity(new ArchGroup([{ relativePosition: 0 }]));\n\n    this.camera = new MazeCamera();\n    this.area.createEntity(this.camera);\n\n    this.area.createEntity(new FadeInEffect());\n    this.area.setTimer(Timer.TestForMovement, 11, true);\n  }\n\n  public movedTo(index: number): void {\n    for (const entity of this.area.findEntities('torch-entity') as Entity<TorchEntity>[]) {\n      entity.state.setTorchPosition(index);\n    }\n  }\n\n  public canEnterDoor(index: number): boolean {\n    return index === 0;\n  }\n\n  /**\n   * Action fired when the door is entered\n   */\n  enterDoor(_index: number): void {\n    this.area.game.setArea(new MainArea('2'));\n  }\n\n  onDispose(): void {}\n\n  onTimer(timerIndex: number): void {\n    switch (timerIndex) {\n      case Timer.TestForMovement:\n        this.area.setTimer(Timer.TestForMovement, 1, true);\n        if (this.camera.isMoving) {\n          this.hideText = true;\n        }\n        break;\n    }\n  }\n\n  onStep(): void {}\n\n  onDraw(g2d: CanvasRenderingContext2D): void {\n    if (this.hideText) {\n      return;\n    }\n\n    // Draw the title text\n    g2d.font = 'bold 36pt \"Special Elite\"';\n    g2d.textAlign = 'center';\n    g2d.textBaseline = 'top';\n    g2d.fillStyle = '#9c7300';\n    g2d.fillText('Prime Number Catacombs', this.area.overlayWidth / 2, 20);\n\n    // Draw the outline\n    g2d.beginPath();\n    g2d.strokeStyle = 'black';\n    g2d.lineWidth = 0.01;\n    g2d.strokeText('Prime Number Catacombs', this.area.overlayWidth / 2, 20);\n    g2d.stroke();\n\n    // Draw the \"Created By\"\n    g2d.font = '14pt sans-serif';\n    g2d.fillStyle = '#dddddd';\n\n    const metrics = g2d.measureText('Created by Bryan McClain');\n    g2d.fillText(\n      'Created by Bryan McClain',\n      this.area.overlayWidth / 2,\n      this.area.overlayHeight - 2 * metrics.actualBoundingBoxDescent,\n    );\n  }\n}\n","import * as THREE from 'three';\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport prettySize from 'prettysize';\n\n/**\n * All files needed to load a cube texture\n */\nexport interface CubeTextureFiles {\n  positiveX: string;\n  negativeX: string;\n  positiveY: string;\n  negativeY: string;\n  positiveZ: string;\n  negativeZ: string;\n}\n\nexport const DEFAULT_PROGRESS_HANDLER: (input: string) => void = console.log;\nexport const DEFAULT_ERROR_HANDLER = (e: string): void => {\n  throw new Error(e);\n};\n\n/**\n * Manage all assets in the game\n */\nexport class AssetsManager {\n  private audioLoader: THREE.AudioLoader;\n  private imageLoader: THREE.ImageLoader;\n  private textureLoader: THREE.TextureLoader;\n  private cubeTextureLoader: THREE.CubeTextureLoader;\n  private objectLoader: THREE.ObjectLoader;\n  private materialLoader: THREE.MaterialLoader;\n  private animationLoader: THREE.AnimationLoader;\n  private gltfLoader: GLTFLoader;\n  private fontLoader: THREE.FontLoader;\n\n  private textures: Record<string, THREE.Texture> = {};\n  private sounds: Record<string, AudioBuffer> = {};\n  private images: Record<string, HTMLImageElement> = {};\n  private objects: Record<string, THREE.Object3D> = {};\n  private materials: Record<string, THREE.Material> = {};\n  private animations: Record<string, THREE.AnimationClip> = {};\n  private fonts: Record<string, THREE.Font> = {};\n\n  public progressHandler = DEFAULT_PROGRESS_HANDLER;\n  public errorHandler = DEFAULT_ERROR_HANDLER;\n\n  /**\n   * Constructed internally by the game entine\n   */\n  constructor() {\n    this.audioLoader = new THREE.AudioLoader();\n    this.imageLoader = new THREE.ImageLoader();\n    this.textureLoader = new THREE.TextureLoader();\n    this.cubeTextureLoader = new THREE.CubeTextureLoader();\n    this.objectLoader = new THREE.ObjectLoader();\n    this.materialLoader = new THREE.MaterialLoader();\n    this.animationLoader = new THREE.AnimationLoader();\n    this.gltfLoader = new GLTFLoader();\n    this.fontLoader = new THREE.FontLoader();\n  }\n\n  /**\n   * Load a texture from a file. The texture can be used immediately.\n   * Replaces any existing loaded texture with the same name.\n   * The texture namespace is shared with the cube texture namespace.\n   *\n   * Throws an exception if it fails to load (for whatever reason).\n   *\n   * @param name Name of the texture to store\n   * @param file Filepath of the texture on the web server\n   * @returns Promise to wait for asset to finish loading\n   */\n  public loadTexture(name: string, file: string): Promise<void> {\n    return this.textureLoader\n      .loadAsync(file, this.onProgress('texture', name, file))\n      .then((texture) => {\n        this.textures[name] = texture;\n      })\n      .catch(this.onError('texture', name, file));\n  }\n\n  /**\n   * Load a cube texture from a file.\n   * Replaces any existing loaded texture with the same name.\n   * The cube texture namespace is shared with the texture namespace.\n   *\n   * Throws an exception if it fails to load (for whatever reason).\n   *\n   * @param name Name of the texture to store\n   * @param files The six files required to load a cube texture\n   * @returns Promise to wait for asset to finish loading\n   */\n  public loadCubeTexture(name: string, files: CubeTextureFiles): Promise<void> {\n    return new Promise((resolve) => {\n      const { positiveX, negativeX, positiveY, negativeY, positiveZ, negativeZ } = files;\n      this.cubeTextureLoader.load(\n        [positiveX, negativeX, positiveY, negativeY, positiveZ, negativeZ],\n        (texture) => {\n          this.textures[name] = texture;\n          resolve();\n        },\n\n        this.onProgress('cube texture', name, files.toString()),\n        this.onError('cube texture', name, files.toString()),\n      );\n    });\n  }\n\n  /**\n   * Save a texture into the list of assets\n   * Replaces any existing loaded texture with the same name.\n   * The texture namespace is shared with the cube texture namespace.\n   *\n   * @param name Name of the texture to save\n   * @param texture Texture to save\n   */\n  public saveTexture(name: string, texture: THREE.Texture): void {\n    this.textures[name] = texture;\n  }\n\n  /**\n   * Get a saved texture from the list of assets.\n   * Throws an exception if the texture does not exist.\n   *\n   * Since Texture and CubeTexture share the same namespace, you might\n   *  have to downcast if this is a cube texture.\n   *\n   * @param name Name of the texture to get\n   * @returns The saved texture\n   */\n  public getTexture(name: string): THREE.Texture {\n    const texture = this.textures[name];\n    if (typeof texture === 'undefined') {\n      throw new Error(`No such loaded texture '${name}'`);\n    }\n\n    return texture;\n  }\n\n  /**\n   * Test if a given texture exists in the list of assets\n   *\n   * @param name Name of the texture to test\n   * @return True if the texture exists, false otherwise\n   */\n  public hasTexture(name: string): boolean {\n    return typeof this.textures[name] !== 'undefined';\n  }\n\n  /**\n   * Load sound from an audio file\n   * Replaces any existing loaded audio with the same name.\n   *\n   * Throws an exception if it fails to load (for whatever reason).\n   *\n   * @param name Name of the audio to load\n   * @param file Filepath of the audio file on the web server\n   * @returns Promise to wait for asset to finish loading\n   */\n  public loadAudioFile(name: string, file: string): Promise<void> {\n    return this.audioLoader\n      .loadAsync(file, this.onProgress('audio', name, file))\n      .then((buffer: AudioBuffer) => {\n        this.sounds[name] = buffer;\n      })\n      .catch(this.onError('audio', name, file));\n  }\n\n  /**\n   * Save a audio into the list of assets\n   * Replaces any existing loaded audio with the same name.\n   *\n   * @param name Name of the audio to save\n   * @param audio Audio to save\n   */\n  public saveAudio(name: string, audio: AudioBuffer): void {\n    this.sounds[name] = audio;\n  }\n\n  /**\n   * Get a saved audio buffer from the list of assets.\n   * Throws an exception if the audio does not exist.\n   *\n   * @param name Name of the audio buffer to get\n   * @returns The saved audio buffer\n   */\n  public getAudio(name: string): AudioBuffer {\n    const audio = this.sounds[name];\n    if (typeof audio === 'undefined') {\n      throw new Error(`No such loaded audio buffer '${name}'`);\n    }\n\n    return audio;\n  }\n\n  /**\n   * Test if a given audio buffer exists in the list of assets\n   *\n   * @param name Name of the audio buffer to test\n   * @return True if the audio buffer exists, false otherwise\n   */\n  public hasAudio(name: string): boolean {\n    return typeof this.sounds[name] !== 'undefined';\n  }\n\n  /**\n   * Load images from a file\n   * Replaces any existing loaded image with the same name.\n   *\n   * Throws an exception if it fails to load (for whatever reason).\n   *\n   * @param name Name of the image to load\n   * @param file Filepath of the image on the web server\n   * @returns Promise to wait for asset to finish loading\n   */\n  public loadImage(name: string, file: string): Promise<void> {\n    return this.imageLoader\n      .loadAsync(file, this.onProgress('image', name, file))\n      .then((image: HTMLImageElement) => {\n        this.images[name] = image;\n      })\n      .catch(this.onError('image', name, file));\n  }\n\n  /**\n   * Save a image into the list of assets\n   * Replaces any existing loaded image with the same name.\n   *\n   * @param name Name of the image to save\n   * @param audio Image to save\n   */\n  public saveImage(name: string, image: HTMLImageElement): void {\n    this.images[name] = image;\n  }\n\n  /**\n   * Get a saved image from the list of assets.\n   * Throws an exception if the image does not exist.\n   *\n   * @param name Name of the image to get\n   * @returns The saved image\n   */\n  public getImage(name: string): HTMLImageElement {\n    const image = this.images[name];\n    if (typeof image === 'undefined') {\n      throw new Error(`No such loaded image '${name}'`);\n    }\n\n    return image;\n  }\n\n  /**\n   * Test if a given image exists in the list of assets\n   *\n   * @param name Name of the image to test\n   * @return True if the image exists, false otherwise\n   */\n  public hasImage(name: string): boolean {\n    return typeof this.images[name] !== 'undefined';\n  }\n\n  /**\n   * Load an Object3D from a JSON file\n   * Replaces any existing loaded Object3D with the same name.\n   *\n   * Throws an exception if it fails to load (for whatever reason).\n   *\n   * @param name Name of the object to load\n   * @param file Filepath of the object to load\n   * @returns Promise to wait for asset to finish loading\n   */\n  public loadObject(name: string, file: string): Promise<void> {\n    return this.objectLoader\n      .loadAsync(file, this.onProgress('object', name, file))\n      .then((object) => {\n        this.objects[name] = object;\n      })\n      .catch(this.onError('object', name, file));\n  }\n\n  /**\n   * Save an Object3D into the list of assets\n   * Replaces any existing loaded Object3D with the same name.\n   *\n   * @param name Name of the object to save\n   * @param object Object3D to save\n   */\n  public saveObject(name: string, object: THREE.Object3D): void {\n    this.objects[name] = object;\n  }\n\n  /**\n   * Get a saved Object3D from the list of assets.\n   * Throws an exception if the object does not exist.\n   *\n   * @param name Name of the object to get\n   * @returns Object3D\n   */\n  public getObject(name: string): THREE.Object3D {\n    const object = this.objects[name];\n    if (typeof object === 'undefined') {\n      throw new Error(`No such loaded object '${name}'`);\n    }\n\n    return object;\n  }\n\n  /**\n   * Test if a given object exists in the list of assets\n   *\n   * @param name Name of the object to test\n   * @return True if the object exists, false otherwise\n   */\n  public hasObject(name: string): boolean {\n    return typeof this.objects[name] !== 'undefined';\n  }\n\n  /**\n   * Load a material from a JSON file\n   * Replaces any existing loaded material with the same name.\n   *\n   * Throws an exception if it fails to load (for whatever reason).\n   *\n   * @param name Name of the material to load\n   * @param file Filepath of the object to load\n   * @returns Promise to wait for asset to finish loading\n   */\n  public loadMaterial(name: string, file: string): Promise<void> {\n    return this.materialLoader\n      .loadAsync(file, this.onProgress('material', name, file))\n      .then((material) => {\n        this.materials[name] = material;\n      })\n      .catch(this.onError('material', name, file));\n  }\n\n  /**\n   * Save a material to the list of assets.\n   * Replaces any existing loaded material with the same name.\n   *\n   * @param name Name of the material to save\n   * @param material Material to save\n   */\n  public saveMaterial(name: string, material: THREE.Material): void {\n    this.materials[name] = material;\n  }\n\n  /**\n   * Get a saved material from the list of assets.\n   * Throws an exception if the material does not exist.\n   *\n   * @param name Name of the material to get\n   * @returns Material\n   */\n  public getMaterial(name: string): THREE.Material {\n    const material = this.materials[name];\n    if (typeof material === 'undefined') {\n      throw new Error(`No such loaded material '${name}'`);\n    }\n    return material;\n  }\n\n  /**\n   * Test if a given material exists in the list of assets\n   *\n   * @param name Name of the material to test\n   * @return True if the material exists, false otherwise\n   */\n  public hasMaterial(name: string): boolean {\n    return typeof this.materials[name] !== 'undefined';\n  }\n\n  /**\n   * Load a collection of animations from a JSON file.\n   * Throws an exception if it fails to load (for whatever reason).\n   *\n   * Since one file can contain multiple animation clips, you must provide a custom callback\n   * to individually name and store the animations.\n   * The callback is also passed an instance of this asset manager.\n   *\n   * @param file JSON file to load\n   * @param onLoad Callback to handle the loaded animation clips.\n   * @returns Promise to wait for asset to finish loading\n   */\n  public loadAnimations(\n    file: string,\n    onLoad: (animation: THREE.AnimationClip[], manager: this) => void,\n  ): Promise<void> {\n    return this.animationLoader\n      .loadAsync(file, this.onProgress('animation', null, file))\n      .then((animations) => onLoad(animations, this))\n      .catch(this.onError('animation', null, file));\n  }\n\n  /**\n   * Save an animation to the list of assets.\n   * Replaces any existing loaded animation with the same name.\n   *\n   * @param name Name of the animation to save\n   * @param animation Animation to save\n   */\n  public saveAnimation(name: string, animation: THREE.AnimationClip): void {\n    this.animations[name] = animation;\n  }\n\n  /**\n   * Get a saved animation from the list of assets.\n   * Throws an exception if the animation does not exist.\n   *\n   * @param name Name of the animation to get\n   * @returns Animation\n   */\n  public getAnimation(name: string): THREE.AnimationClip {\n    const animation = this.animations[name];\n    if (typeof animation === 'undefined') {\n      throw new Error(`No such loaded animation '${name}'`);\n    }\n\n    return animation;\n  }\n\n  /**\n   * Test if a given animation exists the list of assets\n   *\n   * @param name Name of the animation to test\n   * @return True if the animation exists, false otherwise\n   */\n  public hasAnimation(name: string): boolean {\n    return typeof this.animations[name] !== 'undefined';\n  }\n\n  /**\n   * Load a GLTF file from a web server.\n   *\n   * You must provide a custom callback to decide how to handle the loaded object data.\n   * The callback also includes a reference to the current AssetManager.\n   * You can use the various save*() methods to save the included assets\n   *\n   * Throws an exception if it fails to load (for whatever reason).\n   *\n   * @param file File to load\n   * @param onLoad Callback that dictates how to handle the loaded data.\n   * @returns Promise to wait for asset to finish loading\n   */\n  public loadGLTFFile(file: string, onLoad: (gltf: GLTF, manager: this) => void): Promise<void> {\n    return this.gltfLoader\n      .loadAsync(file, this.onProgress('gltf', null, file))\n      .then((gltf) => onLoad(gltf, this))\n      .catch(this.onError('gltf', null, file));\n  }\n\n  /**\n   * Load a font from a JSON file\n   * Replaces any existing loaded font with the same name.\n   *\n   * Throws an exception if it fails to load (for whatever reason).\n   *\n   * @param name Name of the font to load\n   * @param file Filepath of the object to load\n   * @returns Promise to wait for asset to finish loading\n   */\n  public loadFont(name: string, file: string): Promise<void> {\n    return this.fontLoader\n      .loadAsync(file, this.onProgress('font', name, file))\n      .then((font) => {\n        this.fonts[name] = font;\n      })\n      .catch(this.onError('font', name, file));\n  }\n\n  /**\n   * Save a font to the list of assets.\n   * Replaces any existing loaded fonts with the same name.\n   *\n   * @param name Name of the font to save\n   * @param font Font to save\n   */\n  public saveFont(name: string, font: THREE.Font): void {\n    this.fonts[name] = font;\n  }\n\n  /**\n   * Get a saved font from the list of assets.\n   * Throws an exception if the font does not exist.\n   *\n   * @param name Name of the font to get\n   * @returns Font\n   */\n  public getFont(name: string): THREE.Font {\n    const font = this.fonts[name];\n    if (typeof font === 'undefined') {\n      throw new Error(`No such loaded font '${name}'`);\n    }\n\n    return font;\n  }\n\n  /**\n   * Test if a given font exists the list of assets\n   *\n   * @param name Name of the font to test\n   * @return True if the font exists, false otherwise\n   */\n  public hasFont(name: string): boolean {\n    return typeof this.fonts[name] !== 'undefined';\n  }\n\n  /**\n   * Display a progress log message as files are downloaded\n   */\n  private onProgress(filetype: string, name: string | null, file: string): (event: ProgressEvent<EventTarget>) => void {\n    return (event) => {\n      const nameString = name !== null ? `'${name}' ` : '';\n      const prefix = `Loading ${filetype} ${nameString}from '${file}': ${prettySize(event.loaded)}`;\n\n      // Only show a percent if the length is computable\n      if (event.lengthComputable) {\n        const percentLoaded = (event.loaded * 100) / event.total;\n        this.progressHandler(`${prefix} / ${prettySize(event.total)} (${percentLoaded.toFixed(0)}%)`);\n      } else {\n        this.progressHandler(`${prefix} Loaded`);\n      }\n    };\n  }\n\n  /**\n   * Throw an exception if an error occurs\n   */\n  private onError(filetype: string, name: string | null, file: string): (error: ErrorEvent) => void {\n    const nameString = name !== null ? `'${name}' ` : '';\n    return (error) => {\n      this.errorHandler(\n        `Error loading ${filetype} ${nameString}from '${file}'${error.message ? `: ${error.message}` : ''}`,\n      );\n    };\n  }\n}\n","/**\n * Plain-old data class for running the timers in Area and Entity.\n * This is an internal class to the engine and should not be used directly.\n */\nexport class TimerEntry {\n  private ticksLeft: number;\n  private ticks: number;\n  private looping: boolean;\n  private running: boolean;\n\n  constructor(ticks: number, looping: boolean) {\n    this.ticksLeft = ticks;\n    this.ticks = ticks;\n    this.looping = looping;\n    this.running = true;\n  }\n\n  /**\n   * Test whether or not a timer is running\n   * @return  Timer running\n   */\n  public isRunning(): boolean {\n    return this.running;\n  }\n\n  /**\n   * Used to pause and resume a timer\n   * @param running   Set timer running\n   */\n  public setRunning(running: boolean): void {\n    this.running = running;\n  }\n\n  /**\n   * One tick on the timer. Returns true if the timer should fire.\n   * @returns True if the timer should fire\n   */\n  public tick(): boolean {\n    switch (this.ticksLeft) {\n      case 0:\n        return false; // No more ticks left in timer\n\n      case 1:\n        if (this.looping) {\n          this.ticksLeft = this.ticks;\n        } else {\n          this.ticksLeft = 0;\n        }\n        return true;\n\n      default:\n        this.ticksLeft -= 1;\n        return false; // Still waiting\n    }\n  }\n}\n","import * as THREE from 'three';\n\n// Geometries to draw collision masks\nconst WIREFRAME_MATERIAL = new THREE.LineBasicMaterial({ color: 0xffffff });\nconst SPHERE_GEOMETRY = new THREE.WireframeGeometry(new THREE.IcosahedronGeometry(1, 2));\n\n// Build the box geometry line segments manually\nconst BOX_GEOMETRY_INDICES = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\nconst BOX_GEOETRY_VERTICES = new THREE.Float32BufferAttribute(\n  [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1],\n  3,\n);\nconst BOX_GEOMETRY = new THREE.BufferGeometry()\n  .setIndex(new THREE.BufferAttribute(BOX_GEOMETRY_INDICES, 1))\n  .setAttribute('position', BOX_GEOETRY_VERTICES);\n\n/**\n * Represents a generic type of collision mask.\n *\n * Collisions in the game engine are either boxes or spheres.\n * Additionally, there is a CollisionMaskGroup that can check for multiple collision masks.\n */\nexport interface CollisionMask {\n  // If set to true, draws the outline of the mask\n  //  Set this value to \"false\" before replacing any masks to clear the scene.\n  showMask: boolean;\n\n  isCollidingWith(other: CollisionMask): boolean;\n\n  // Collision methods common to all collision masks\n  intersectsBox(box: THREE.Box3): boolean;\n  intersectsSphere(sphere: THREE.Sphere): boolean;\n  intersectRay(ray: THREE.Ray): THREE.Vector3 | null;\n\n  // Other methods\n  containsPoint(point: THREE.Vector3): boolean;\n  update(object: THREE.Object3D): void;\n\n  // Called internally by the game engine, ignore this method\n  _drawMask(scene: THREE.Scene): void;\n}\n\n/**\n * Handles collisions for an axis-aligned bounding box\n */\nexport class BoxCollisionMask implements CollisionMask {\n  // You can mutate this value\n  public readonly box: THREE.Box3;\n\n  // Set to true to draw the wireframe mask\n  private _showMask = false;\n  private helper: THREE.LineSegments | null = null;\n\n  constructor(boxObject?: THREE.Box3 | THREE.Object3D) {\n    this.box = new THREE.Box3();\n\n    // Maybe update the box\n    if (boxObject instanceof THREE.Box3) {\n      this.box.copy(boxObject);\n    } else if (boxObject instanceof THREE.Object3D) {\n      this.update(boxObject);\n    }\n  }\n\n  get showMask(): boolean {\n    return this._showMask;\n  }\n\n  set showMask(newMask: boolean) {\n    this._showMask = newMask;\n\n    // Dispose of the Box3Helper\n    //   Must manually remove the geometry or else we have a memory leak\n    if (newMask === false && this.helper !== null) {\n      this.helper.parent.remove(this.helper);\n      this.helper = null;\n    }\n  }\n\n  isCollidingWith(other: CollisionMask): boolean {\n    return other.intersectsBox(this.box);\n  }\n\n  intersectsBox(box: THREE.Box3): boolean {\n    return this.box.intersectsBox(box);\n  }\n\n  intersectsSphere(sphere: THREE.Sphere): boolean {\n    return this.box.intersectsSphere(sphere);\n  }\n\n  intersectRay(ray: THREE.Ray): THREE.Vector3 | null {\n    return ray.intersectBox(this.box, new THREE.Vector3());\n  }\n\n  containsPoint(point: THREE.Vector3): boolean {\n    return this.box.containsPoint(point);\n  }\n\n  update(object: THREE.Object3D): void {\n    this.box.setFromObject(object);\n  }\n\n  /// Used internally by the game engine\n  _drawMask(scene: THREE.Scene): void {\n    if (this.showMask) {\n      // Build a new box mesh for the scene\n      if (this.helper === null) {\n        this.helper = new THREE.LineSegments(BOX_GEOMETRY, WIREFRAME_MATERIAL);\n        scene.add(this.helper);\n      }\n\n      // Resize box to fit the collision box\n      this.box.getCenter(this.helper.position);\n      this.box.getSize(this.helper.scale);\n      this.helper.scale.multiplyScalar(0.5);\n    } else {\n      // Release the box resources\n      if (this.helper !== null) {\n        scene.remove(this.helper);\n        this.helper = null;\n      }\n    }\n  }\n}\n\n/**\n * Handles collision for a sphere\n */\nexport class SphereCollisionMask implements CollisionMask {\n  // You can mutate this value\n  public readonly sphere: THREE.Sphere;\n\n  // Set to true to draw the wireframe mask\n  private _showMask = false;\n  private helper: THREE.LineSegments | null = null;\n\n  constructor(sphereObject?: THREE.Sphere | THREE.Object3D) {\n    this.sphere = new THREE.Sphere();\n\n    if (sphereObject instanceof THREE.Sphere) {\n      this.sphere.copy(sphereObject);\n    } else if (sphereObject instanceof THREE.Object3D) {\n      this.update(sphereObject);\n    }\n  }\n\n  get showMask(): boolean {\n    return this._showMask;\n  }\n\n  set showMask(newMask: boolean) {\n    this._showMask = newMask;\n\n    // Release the sphere resources\n    if (newMask === false && this.helper !== null) {\n      this.helper.parent.remove(this.helper);\n      this.helper = null;\n    }\n  }\n\n  isCollidingWith(other: CollisionMask): boolean {\n    return other.intersectsSphere(this.sphere);\n  }\n\n  intersectsBox(box: THREE.Box3): boolean {\n    return this.sphere.intersectsBox(box);\n  }\n\n  intersectsSphere(sphere: THREE.Sphere): boolean {\n    return this.sphere.intersectsSphere(sphere);\n  }\n\n  intersectRay(ray: THREE.Ray): THREE.Vector3 | null {\n    return ray.intersectSphere(this.sphere, new THREE.Vector3());\n  }\n\n  containsPoint(point: THREE.Vector3): boolean {\n    return this.sphere.containsPoint(point);\n  }\n\n  update(object: THREE.Object3D): void {\n    const boundingSphere = new THREE.Box3().setFromObject(object).getBoundingSphere(new THREE.Sphere());\n    this.sphere.set(boundingSphere.center, boundingSphere.radius);\n\n    // Sadly, the recursive algorithm below does not work because there is some sort of glitch\n    //  with sphere.union(). I have no idea what is causiing this problem in THREE.js\n    //\n    // this.expandByObject(object);\n    // if (this.sphere.radius === 0) {\n    //   this.sphere.radius = boundingSphere.radius;\n    // }\n  }\n\n  /**\n   * Recursively expand the sphere for all geometries in the scene\n   */\n  private expandByObject(object: THREE.Object3D): void {\n    // Force the world matrix to update\n    object.updateWorldMatrix(false, false);\n\n    // Expand by the current geometry\n    const geometry = (object as THREE.Mesh).geometry;\n    if (typeof geometry !== 'undefined') {\n      if (geometry.boundingSphere === null) {\n        geometry.computeBoundingSphere();\n      }\n\n      const geometrySphere = geometry.boundingSphere.clone();\n      geometrySphere.applyMatrix4(object.matrixWorld);\n      this.sphere.union(geometrySphere);\n    }\n\n    // Recursively expand by all children\n    for (const child of object.children) {\n      this.expandByObject(child);\n    }\n  }\n\n  /// Used internally by the game engine\n  _drawMask(scene: THREE.Scene): void {\n    if (this.showMask) {\n      // Build a new sphere mesh for the scene\n      if (this.helper === null) {\n        this.helper = new THREE.LineSegments(SPHERE_GEOMETRY, WIREFRAME_MATERIAL);\n        scene.add(this.helper);\n      }\n\n      // Update the sphere position\n      this.helper.position.copy(this.sphere.center);\n      this.helper.scale.set(this.sphere.radius, this.sphere.radius, this.sphere.radius);\n    } else {\n      // Release the sphere resources\n      if (this.helper !== null) {\n        scene.remove(this.helper);\n        this.helper = null;\n      }\n    }\n  }\n}\n\n/**\n * Represents a collection of objects which form a mask.\n *\n * These methods all check against all masks in the collection.\n * Do NOT infinitely nest a collision mask, like a mask with itself in the list.\n */\nexport class GroupCollisionMask implements CollisionMask {\n  public readonly masks: CollisionMask[];\n\n  private _showMask = false;\n\n  constructor(...masks: (CollisionMask | CollisionMask[])[]) {\n    this.masks = [...masks.flat(1)];\n  }\n\n  get showMask(): boolean {\n    return this._showMask;\n  }\n\n  /**\n   * Automatically sets all of the masks of the children\n   */\n  set showMask(newMask: boolean) {\n    this._showMask = newMask;\n    for (const mask of this.masks) {\n      mask.showMask = newMask;\n    }\n  }\n\n  public addMask(...masks: (CollisionMask | CollisionMask[])[]): void {\n    this.masks.push(...masks.flat(1));\n  }\n\n  isCollidingWith(other: CollisionMask): boolean {\n    return this.masks.some((mask) => mask.isCollidingWith(other));\n  }\n\n  intersectsBox(box: THREE.Box3): boolean {\n    return this.masks.some((mask) => mask.intersectsBox(box));\n  }\n\n  intersectsSphere(sphere: THREE.Sphere): boolean {\n    return this.masks.some((mask) => mask.intersectsSphere(sphere));\n  }\n\n  intersectRay(ray: THREE.Ray): THREE.Vector3 | null {\n    // Find the closest intersection\n    let min: THREE.Vector3 | null = null;\n    for (const mask of this.masks) {\n      const intersection = mask.intersectRay(ray);\n      if (intersection === null) {\n        continue;\n      }\n\n      if (min === null || intersection.distanceTo(ray.origin) < min.distanceTo(ray.origin)) {\n        min = intersection;\n      }\n    }\n\n    return min;\n  }\n\n  containsPoint(point: THREE.Vector3): boolean {\n    return this.masks.some((mask) => mask.containsPoint(point));\n  }\n\n  update(object: THREE.Object3D): void {\n    for (const mask of this.masks) {\n      mask.update(object);\n    }\n  }\n\n  _drawMask(scene: THREE.Scene): void {\n    if (this.showMask) {\n      for (const mask of this.masks) {\n        mask._drawMask(scene);\n      }\n    }\n  }\n}\n\n/**\n * Collision mask that always returns false (No check)\n */\nexport class EmptyCollisionMask implements CollisionMask {\n  showMask: boolean;\n\n  isCollidingWith(_other: CollisionMask): boolean {\n    return false;\n  }\n\n  intersectsBox(_box: THREE.Box3): boolean {\n    return false;\n  }\n\n  intersectsSphere(_sphere: THREE.Sphere): boolean {\n    return false;\n  }\n\n  intersectRay(_ray: THREE.Ray): THREE.Vector3 | null {\n    return null;\n  }\n\n  containsPoint(_point: THREE.Vector3): boolean {\n    return false;\n  }\n\n  update(_object: THREE.Object3D): void {}\n\n  _drawMask(_scene: THREE.Scene): void {}\n}\n","import * as THREE from 'three';\nimport { Area } from 'engine/area';\nimport { TimerEntry } from './timerEntry';\nimport { CollisionMask, EmptyCollisionMask } from './collision';\n\n/**\n * Each entity in the game must implement the entity state\n */\nexport interface EntityState {\n  /// List of tags to query entities in an area\n  /// Set this to a constant value on object initialization.\n  readonly tags: string[];\n\n  /// Returns the newly created entity for the EntityState to store\n  onCreate(entity: Entity<this>): void;\n\n  /// Only called if the entity is explicitly destroyed\n  onDestroy(): void;\n\n  /// Always called, either when an entity is destroyed or the room is changed\n  onDispose(): void;\n\n  onStep(): void;\n  onTimer(timerIndex: number): void;\n  onDraw(g2d: CanvasRenderingContext2D): void;\n}\n\n/**\n * Represents a single object in an area that has interaction.\n *\n * This class is constructed by the game engine,\n *  so you don't need to worry about creating this manually.\n */\nexport class Entity<State extends EntityState = EntityState> {\n  public readonly area: Area;\n  public readonly state: State;\n  public mask: CollisionMask;\n\n  /* Internal state objects */\n  private readonly timers = new Map<number, TimerEntry>();\n  private _isDestroyed = false;\n  private _object: THREE.Object3D | null = null;\n\n  /**\n   * This class is constructed by the game engine,\n   *  so you don't need to worry about creating this manually.\n   */\n  constructor(area: Area, state: State) {\n    this.area = area;\n    this.state = state;\n    this.mask = new EmptyCollisionMask();\n  }\n\n  /**\n   * Mark this entity to be destroyed on the next game tick\n   */\n  public destroy(): void {\n    this._isDestroyed = true;\n  }\n\n  /**\n   * @returns Returns true if this entity has already been destroyed\n   */\n  public get isDestroyed(): boolean {\n    return this._isDestroyed;\n  }\n\n  /**\n   * Get the 3D object associated with this entity\n   */\n  public get object(): THREE.Object3D | null {\n    return this._object;\n  }\n\n  /**\n   * Replace the 3D object associated with this entity\n   */\n  public set object(object: THREE.Object3D | null) {\n    // Remove the old object, if it exists\n    if (this._object !== null) {\n      this.area.scene.remove(this._object);\n    }\n\n    // Load the new object\n    if (object !== null) {\n      this.area.scene.add(object);\n    }\n    this._object = object;\n  }\n\n  /**\n   * Set a timer to fire after a certain number of game ticks.\n   *  Safe to call from within the timerFired() event handler.\n   *\n   * @param index    Unique index for the timer\n   * @param ticks    Number of ticks to wait. Minimum is 1.\n   * @param looping  Should timer loop forever?\n   */\n  public setTimer(index: number, ticks: number, looping = false): void {\n    if (ticks < 1) {\n      return;\n    }\n    this.timers.set(index, new TimerEntry(ticks, looping));\n  }\n\n  /**\n   * Clear and remove the timer.\n   *  Safe to call from within the timerFired() method.\n   *\n   * @param index   Unique index for the timer\n   */\n  public clearTimer(index: number): void {\n    this.timers.delete(index);\n  }\n\n  /**\n   * Test if two entities are colliding with each other\n   *\n   * @param other Other entity to check\n   * @returns True if they are colliding, false otherwise\n   */\n  public isCollidingWith(other: Entity<EntityState>): boolean {\n    return this.mask.isCollidingWith(other.mask);\n  }\n\n  // ==== Internal Methods Listed Below ====\n\n  /**\n   * Run the onCreate() event handler.\n   *\n   * This method is used internally by the game engine and\n   *  should NOT be called directly!\n   */\n  _create(): void {\n    this.state.onCreate(this);\n  }\n\n  /**\n   * Run the onDestroy() event handler.\n   *\n   * This method is used internally by the game engine and\n   *  should NOT be called directly!\n   */\n  _destroy(): void {\n    this.state.onDestroy();\n    this.mask.showMask = false; /* Clean up mask resources */\n\n    if (this._object !== null) {\n      this.area.scene.remove(this._object);\n    }\n  }\n\n  /**\n   * Run the onDispose() event handler.\n   *\n   * This method is used internally by the game engine and\n   *  should NOT be called directly!\n   */\n  _dispose(): void {\n    this.state.onDispose();\n  }\n\n  /**\n   * Run the onTimer() event handlers for this entity.\n   *\n   * This method is used internally by the game engine and\n   *  should NOT be called directly!\n   */\n  _tickTimers(): void {\n    const timersFired = [];\n    for (const [index, timer] of this.timers) {\n      if (timer.isRunning()) {\n        if (timer.tick()) {\n          timersFired.push(index);\n        }\n      }\n    }\n\n    for (const index of timersFired) {\n      this.state.onTimer(index);\n    }\n  }\n\n  /**\n   * Run the onStep() event handler.\n   *\n   * This method is used internally by the game engine and\n   *  should NOT be called directly!\n   */\n  _step(): void {\n    this.state.onStep();\n  }\n\n  /**\n   * Run the onDraw() event handler.\n   *\n   * This method is used internally by the game engine and\n   *  should NOT be called directly!\n   */\n  _draw(g2d: CanvasRenderingContext2D): void {\n    this.state.onDraw(g2d);\n  }\n}\n","import * as THREE from 'three';\n\n/**\n * Wrapper around the THREE.js audio type that makes it easier to work with\n */\nexport class AudioWrapper<Audio extends THREE.Audio<AudioNode> = THREE.Audio> {\n  public readonly audio: Audio;\n\n  constructor(audio: Audio) {\n    this.audio = audio;\n  }\n\n  public get volume(): number {\n    return this.audio.getVolume();\n  }\n\n  public set volume(volume: number) {\n    this.audio.setVolume(volume);\n  }\n\n  public get loop(): boolean {\n    return this.audio.getLoop();\n  }\n\n  public set loop(loop: boolean) {\n    this.audio.setLoop(loop);\n  }\n\n  public get isPlaying(): boolean {\n    return this.audio.isPlaying;\n  }\n\n  /**\n   * Play the audio, stopping any existing audio if it is already playing\n   *\n   * @param looping Optionally set the value of looping if provided\n   */\n  public play(looping?: boolean): void {\n    if (this.audio.isPlaying) {\n      this.audio.stop();\n    }\n\n    if (typeof looping !== 'undefined') {\n      this.loop = looping;\n    }\n\n    this.audio.play();\n  }\n\n  /**\n   * Stop playing the audio if it is currently playing.\n   * Otherwise, this method has no effect.\n   */\n  public stop(): void {\n    if (this.audio.isPlaying) {\n      this.audio.stop();\n    }\n  }\n}\n","import { Game } from 'engine/game';\nimport { Entity, EntityState } from 'engine/entity';\nimport { TimerEntry } from './timerEntry';\nimport * as THREE from 'three';\nimport { AudioWrapper } from './audio';\nimport { PositionalAudio } from 'three';\n\n/**\n * Methods required to encapsulate an area in the game\n */\nexport interface AreaState {\n  /// Returns the newly created area object for the AreaState to store\n  onCreate(area: Area<this>): void;\n\n  /// Always called when the room changes, meant to dispose any resources stored by the area\n  ///  This is NOT responsible for disposing any entity resources\n  onDispose(): void;\n\n  onTimer(timerIndex: number): void;\n  onStep(): void;\n  onDraw(g2d: CanvasRenderingContext2D): void;\n}\n\n/**\n * Represents a collection of 3D objects in a single \"Scene\".\n *\n * This class is constructed by the game engine,\n *  so you don't need to worry about creating this manually.\n */\nexport class Area<State extends AreaState = AreaState> {\n  public readonly game: Game;\n  public readonly state: State;\n  public readonly scene: THREE.Scene;\n\n  /* Handle audio in the scene */\n  public readonly audioListener: THREE.AudioListener;\n\n  // Has custom get/set methods to update the audio listener\n  private _camera: THREE.Camera;\n\n  /* List of all entities in the scene */\n  private readonly allEntities = new Set<Entity>();\n  private readonly taggedEntities = new Map<string, Set<Entity>>();\n\n  /* List of entities to create after the next game \"tick\" */\n  private toCreate = new Set<Entity>();\n\n  /* Handle timers */\n  private readonly timers = new Map<number, TimerEntry>();\n\n  /* Overlay drawing (Default resolution is 16:9) */\n  public overlayWidth = 768;\n  public overlayHeight = 432;\n\n  /**\n   * This class is constructed by the game engine,\n   *  so you don't need to worry about creating this manually.\n   */\n  constructor(game: Game, state: State) {\n    this.game = game;\n    this.state = state;\n\n    this.scene = new THREE.Scene();\n    this.audioListener = new THREE.AudioListener();\n    this._camera = new THREE.PerspectiveCamera();\n    this._camera.add(this.audioListener);\n  }\n\n  /**\n   * Get the main camera used by the scene\n   */\n  public get camera(): THREE.Camera {\n    return this._camera;\n  }\n\n  /**\n   * Update the main camera used by the scene.\n   * Also updates the AudioManager for this scene.\n   */\n  public set camera(newCamera: THREE.Camera) {\n    this._camera.remove(this.audioListener);\n    newCamera.add(this.audioListener);\n    this._camera = newCamera;\n  }\n\n  /**\n   * Create a new entity on the next game tick.\n   *\n   * Although it returns an entity object, this entity will not actually\n   *  be in the room until the next game tick.\n   *\n   * @param entity Entity to create\n   * @returns The newly created entity object\n   */\n  public createEntity<T extends EntityState>(entity: T): Entity<T> {\n    const newEntity = new Entity(this, entity);\n    this.toCreate.add(newEntity);\n    return newEntity;\n  }\n\n  /**\n   * Get the list of all entities in the scene\n   * @returns Array of all entities\n   */\n  public getAllEntities(): Entity[] {\n    return Array.from(this.allEntities);\n  }\n\n  /**\n   * Find all entities that have the given string tag\n   *\n   * @param tag String tag to search for\n   * @returns List of all entities that have this tag\n   */\n  public findEntities(tag: string): Entity[] {\n    if (!this.taggedEntities.has(tag)) {\n      return [];\n    }\n    return Array.from(this.taggedEntities.get(tag));\n  }\n\n  /**\n   * Find the first instance of the entity, or null if there are no instances\n   *\n   * @param tag String tag to search for\n   * @return    First found entity that match the tag, or null\n   */\n  public findFirstEntity(tag: string): Entity | null {\n    if (!this.taggedEntities.has(tag)) {\n      return null;\n    }\n\n    const entities = this.taggedEntities.get(tag);\n    const firstEntry = entities.values().next();\n    if (firstEntry.done) {\n      return null;\n    } else {\n      return firstEntry.value;\n    }\n  }\n\n  /**\n   * Set a timer to fire after a certain number of game ticks.\n   *  Safe to call from within the timerFired() event handler.\n   *\n   * @param index    Unique index for the timer\n   * @param ticks    Number of ticks to wait. Minimum is 1.\n   * @param looping  Should timer loop forever?\n   */\n  public setTimer(index: number, ticks: number, looping: boolean): void {\n    if (ticks < 1) {\n      return;\n    }\n    this.timers.set(index, new TimerEntry(ticks, looping));\n  }\n\n  /**\n   * Clear and remove the timer.\n   *  Safe to call from within the timerFired() method.\n   *\n   * @param index   Unique index for the timer\n   */\n  public clearTimer(index: number): void {\n    this.timers.delete(index);\n  }\n\n  /**\n   * Helper method to construct a new audio from an AudioBuffer or asset name.\n   * Uses the camera as the listener for this audio.\n   *\n   * @param buffer Audio buffer or audio asset name\n   * @returns Newly constructed audio\n   */\n  public createAudio(buffer: AudioBuffer | string): AudioWrapper<THREE.Audio> {\n    const audio = new THREE.Audio(this.audioListener);\n    if (buffer instanceof AudioBuffer) {\n      audio.buffer = buffer;\n    } else if (typeof buffer === 'string') {\n      audio.buffer = this.game.assets.getAudio(buffer);\n    }\n\n    return new AudioWrapper(audio);\n  }\n\n  /**\n   * Helper method to construct a new positional audio from an AudioBuffer or an asset name.\n   * Uses the camera as the listener for this audio.\n   *\n   * @param buffer Audio buffer or audio asset name\n   * @returns Newly constructed audio\n   */\n  public createPositionalAudio(buffer: AudioBuffer | string): AudioWrapper<PositionalAudio> {\n    const audio = new THREE.PositionalAudio(this.audioListener);\n    if (buffer instanceof AudioBuffer) {\n      audio.buffer = buffer;\n    } else if (typeof buffer === 'string') {\n      audio.buffer = this.game.assets.getAudio(buffer);\n    }\n\n    return new AudioWrapper(audio);\n  }\n\n  // ==== Internal Methods Listed Below ====\n\n  /**\n   * Run the onTimer() event handlers for this area.\n   *\n   * This method is used internally by the game engine and\n   *  should NOT be called directly!\n   */\n  _tickTimers(): void {\n    const timersFired = [];\n    for (const [index, timer] of this.timers) {\n      if (timer.isRunning()) {\n        if (timer.tick()) {\n          timersFired.push(index);\n        }\n      }\n    }\n\n    for (const index of timersFired) {\n      this.state.onTimer(index);\n    }\n  }\n\n  /**\n   * Create all entities inside the buffer\n   *\n   * This method is used internally by the game engine and\n   *  should NOT be called directly!\n   */\n  _createEntities(): void {\n    if (this.toCreate.size === 0) {\n      return;\n    }\n\n    // Add every entity to the map\n    for (const entity of this.toCreate) {\n      this.addEntityToArea(entity);\n    }\n\n    // Clear the list of created entities\n    const created = this.toCreate;\n    this.toCreate = new Set();\n\n    // Call the \"onCreate\" handler for each new entity\n    for (const entity of created) {\n      entity._create();\n    }\n  }\n\n  /// Update the internal maps and sets with the new entity\n  private addEntityToArea(entity: Entity): void {\n    this.allEntities.add(entity);\n\n    for (const tag of entity.state.tags) {\n      this.addTaggedEntityToMap(entity, tag);\n    }\n  }\n\n  /// Add the entity to one of the corresponding set tags\n  private addTaggedEntityToMap(entity: Entity, tag: string): void {\n    if (!this.taggedEntities.has(tag)) {\n      this.taggedEntities.set(tag, new Set());\n    }\n\n    const set = this.taggedEntities.get(tag);\n    set.add(entity);\n  }\n\n  /**\n   * Destroy all entities marked for deletion.\n   *\n   * This method is used internally by the game engine and\n   *  should NOT be called directly!\n   */\n  _destroyEntities(): void {\n    // Get all entities marked for deletion\n    const toDestroy = [];\n    for (const entity of this.allEntities) {\n      if (entity.isDestroyed) {\n        toDestroy.push(entity);\n      }\n    }\n\n    // Actually remove the entities\n    for (const entity of toDestroy) {\n      this.removeEntityFromArea(entity);\n    }\n\n    // Call the \"onDestroy\" event handler for each entity\n    for (const entity of toDestroy) {\n      entity._destroy();\n    }\n\n    // Call the \"onDispose\" event handler for each entity\n    for (const entity of toDestroy) {\n      entity._dispose();\n    }\n  }\n\n  /**\n   * Dispose any entity resources when the room is changed.\n   * This does NOT call the \"onDestroy()\" handler.\n   *\n   * This method is used internally by the game engine and\n   *  should NOT be called directly!\n   */\n  _disposeEntities(): void {\n    for (const entity of this.allEntities) {\n      entity._dispose();\n    }\n  }\n\n  /// Update the internal maps and sets to no longer store the entity\n  private removeEntityFromArea(entity: Entity): void {\n    this.allEntities.delete(entity);\n\n    for (const tag of entity.state.tags) {\n      this.removeTaggedEntityFromMap(entity, tag);\n    }\n  }\n\n  /// Remove the entity to one of the corresponding set tags\n  private removeTaggedEntityFromMap(entity: Entity, tag: string): void {\n    if (!this.taggedEntities.has(tag)) {\n      return;\n    }\n\n    const set = this.taggedEntities.get(tag);\n    set.delete(entity);\n  }\n\n  /**\n   * Run the onTimer() event handler for all entities.\n   *\n   * This method is used internally by the game engine and\n   *  should NOT be called directly!\n   */\n  _tickEntityTimers(): void {\n    for (const entity of this.allEntities) {\n      entity._tickTimers();\n    }\n  }\n\n  /**\n   * Run the onStep() event handler for all entities.\n   *\n   * This method is used internally by the game engine and\n   *  should NOT be called directly!\n   */\n  _stepEntities(): void {\n    for (const entity of this.allEntities) {\n      entity._step();\n    }\n  }\n\n  /**\n   * Run the scene in THREE.js, then draw over any other elements\n   *\n   * This method is used internally by the game engine and\n   *  should NOT be called directly!\n   */\n  _drawScene(renderer: THREE.Renderer, overlay: HTMLCanvasElement): void {\n    // Add all of the collision masks to the scene\n    for (const entity of this.allEntities) {\n      entity.mask._drawMask(this.scene);\n    }\n\n    // Render the scene itself\n    renderer.render(this.scene, this.camera);\n\n    // Clear the overlay before drawing\n    const g2d = overlay.getContext('2d');\n    overlay.width = this.overlayWidth;\n    overlay.height = this.overlayHeight;\n    g2d.clearRect(0, 0, this.overlayWidth, this.overlayHeight);\n\n    // Draw any overlays\n    this.state.onDraw(g2d);\n    for (const entity of this.allEntities) {\n      entity._draw(g2d);\n    }\n  }\n}\n","// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace LocalStorage {\n  /**\n   * Save an object into the browser local storage.\n   * Automatically serializaes the JSON to a string.\n   *\n   * @param key The key to save the object in\n   * @param value Value for the object\n   */\n  export function saveObject<T>(key: string, value: T): void {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  /**\n   * Load an object from the browser local storage.\n   * Automatically underializes the object from a string.\n   *\n   * Throws an exception if T is not in the database and no default value is provided.\n   * There is no check to make sure the returned T is actually valid!!!\n   *\n   * @param key The key of the object to load\n   * @param def Optionally specify the default value to load\n   */\n  export function loadObject<T>(key: string, def?: T): T {\n    const value = window.localStorage.getItem(key);\n    if (value === null) {\n      if (typeof def !== 'undefined') {\n        return def;\n      } else {\n        throw new Error(`Key '${key}' does not exist in local storage`);\n      }\n    }\n\n    return JSON.parse(value);\n  }\n\n  /**\n   * Remove an object from the local storage\n   *\n   * @param key The key of the object to remove\n   */\n  export function removeObject(key: string): void {\n    window.localStorage.removeItem(key);\n  }\n\n  /**\n   * Test if a value exists in the local storage\n   * @param key The key to test\n   */\n  export function exists(key: string): boolean {\n    return window.localStorage.getItem(key) !== null;\n  }\n\n  /**\n   * Clear all entires from the local storage\n   */\n  export function clear(): void {\n    window.localStorage.clear();\n  }\n}\n\n/**\n * Allows you to store global variables associated with the game.\n * This is constructed internally by the game engine.\n */\nexport class ResourceManager {\n  private resources: Record<string, unknown> = {};\n\n  /**\n   * Set a resource in the database\n   *\n   * @param name Name of the resource to set\n   * @param value Value of the resource to set\n   */\n  public setResource<T>(name: string, value: T): void {\n    this.resources[name] = value;\n  }\n\n  /**\n   * Gets a resource from the global resource database.\n   * Throws an exception if the resource is NOT found and no default is specified.\n   *\n   * Does NOT check to make sure the returned type is actually valid.\n   *\n   * @param name Name of the resource to get\n   * @param def Optionally specify a default value\n   * @returns Returned resource\n   */\n  public getResource<T>(name: string, def?: T): T {\n    const resource = this.resources[name];\n    if (typeof resource === 'undefined') {\n      if (typeof def !== 'undefined') {\n        return def;\n      } else {\n        throw new Error(`No such resource '${name}'`);\n      }\n    }\n\n    return resource as T;\n  }\n\n  /**\n   * Delete a resource from the game.\n   * @param name Resource to delete\n   */\n  public deleteResource(name: string): void {\n    delete this.resources[name];\n  }\n\n  /**\n   * Test if a resource exists\n   * @param key Resource to get\n   */\n  public exists(key: string): boolean {\n    return typeof this.resources[key] !== 'undefined';\n  }\n\n  /**\n   * Clear all resources from the list\n   */\n  public clear(): void {\n    this.resources = {};\n  }\n}\n","import * as THREE from 'three';\nimport { Area, AreaState } from 'engine/area';\nimport { InputManager } from './input';\nimport { AssetsManager } from './assets';\nimport { ResourceManager } from './storage';\n\n/**\n * Represents the main interface for interacting with the game\n */\nexport class Game {\n  /* Handle input events */\n  public readonly input: InputManager;\n\n  /* Handle game assets */\n  public readonly assets: AssetsManager;\n\n  /* Global variables */\n  public readonly resources: ResourceManager;\n\n  /* Possibly specify a fixed size for the render output */\n  public screenSize: [number, number] | null = null;\n\n  /* Every game must store an activate area */\n  private _currentArea: Area;\n  private nextArea: AreaState | null = null;\n\n  /* Objects required for drawing */\n  public readonly renderer: THREE.WebGLRenderer;\n  private readonly canvas: HTMLCanvasElement;\n  private readonly overlayCanvas: HTMLCanvasElement;\n\n  private running = false;\n\n  /**\n   * Create a new game object.\n   *\n   * The game expects the overlay canvas to be directly on top of the game canvas.\n   * Thus, user input is actually handled by the overlay canvas, NOT the game canvas.\n   *\n   * @param gameCanvas Canvas to use for drawing the game\n   * @param overlayCanvas Canvas to use for the overlay drawing\n   * @param area\n   */\n  public constructor(gameCanvas: HTMLCanvasElement, overlayCanvas: HTMLCanvasElement) {\n    this.input = new InputManager(overlayCanvas);\n    this.assets = new AssetsManager();\n    this.resources = new ResourceManager();\n\n    this.renderer = new THREE.WebGLRenderer({ canvas: gameCanvas });\n    this.canvas = gameCanvas;\n    this.overlayCanvas = overlayCanvas;\n  }\n\n  /**\n   * Start running the game engine\n   */\n  public start(area: AreaState): void {\n    if (this.running === false) {\n      this.running = true;\n\n      this._currentArea = new Area(this, area);\n      this._currentArea.state.onCreate(this._currentArea);\n      this.overlayCanvas.focus();\n\n      requestAnimationFrame(this.tick.bind(this));\n    }\n  }\n\n  /**\n   * Stop running the game engine\n   */\n  public stop(): void {\n    this.running = false;\n  }\n\n  /**\n   * Get the current area in the game\n   */\n  public get currentArea(): Area {\n    return this._currentArea;\n  }\n\n  /**\n   * Set the next area to display for the game engine\n   *\n   * @param nextArea Next area to display\n   */\n  public setArea(nextArea: AreaState): void {\n    if (this.nextArea === null) {\n      this.nextArea = nextArea;\n    }\n  }\n\n  /**\n   * Get the absolute width of the canvas in the browser\n   */\n  public get canvasWidth(): number {\n    return this.canvas.width;\n  }\n\n  /**\n   * Get the absolute height of the canvas in the browser\n   */\n  public get canvasHeight(): number {\n    return this.canvas.height;\n  }\n\n  /**\n   * Get the absolute width of the overlay canvas in the browser\n   */\n  public get overlayWidth(): number {\n    return this.overlayCanvas.width;\n  }\n\n  /**\n   * Get the absolute height of the overlay canvas in the browser\n   */\n  public get overlayHeight(): number {\n    return this.overlayCanvas.height;\n  }\n\n  /**\n   * Run a single game tick in the engine\n   */\n  private tick(): void {\n    this.resizeCanvas();\n\n    // Build the next area\n    if (this.nextArea !== null) {\n      this.currentArea.state.onDispose();\n      this.currentArea._disposeEntities();\n\n      this._currentArea = new Area(this, this.nextArea);\n      this.nextArea = null;\n      this.currentArea.state.onCreate(this.currentArea);\n    }\n\n    // Area actions\n    this.currentArea._tickTimers();\n    this.currentArea.state.onStep();\n\n    // Entity actions\n    this.currentArea._createEntities();\n    this.currentArea._destroyEntities();\n    this.currentArea._tickEntityTimers();\n    this.currentArea._stepEntities();\n\n    // Draw scene\n    this.currentArea._drawScene(this.renderer, this.overlayCanvas);\n\n    // Update input\n    this.input._clearKeyTick();\n    this.input._updateGamepad();\n    this.input._clearMouseTick();\n\n    // Keep running?\n    if (this.running === true) {\n      requestAnimationFrame(this.tick.bind(this));\n    }\n  }\n\n  /**\n   * Automatically resize the canvas and the renderer to match the correct size\n   */\n  private resizeCanvas(): void {\n    const [displayWidth, displayHeight] =\n      this.screenSize === null ? [this.canvas.clientWidth, this.canvas.clientHeight] : this.screenSize;\n\n    // No need to update\n    if (this.canvas.width === displayWidth && this.canvas.height === displayHeight) {\n      return;\n    }\n\n    this.canvas.width = displayWidth;\n    this.canvas.height = displayHeight;\n    this.renderer.setSize(displayWidth, displayHeight, false);\n  }\n}\n","export type RandomFn = () => number;\n\n/**\n * Generate a random float [min, max)\n *\n * Code from: https://www.codegrepper.com/code-examples/javascript/generate+random+float+number+in+range+javascript\n */\nexport function randomFloat(min: number, max: number, random: RandomFn = Math.random): number {\n  return Math.floor(random() * (max - min + 1) + min);\n}\n\n/**\n * Generate a random integer [min, max]\n *\n * Code from: https://www.codegrepper.com/code-examples/javascript/generate+random+float+number+in+range+javascript\n */\nexport function randomInt(min: number, max: number, random: RandomFn = Math.random): number {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(random() * (max - min + 1)) + min;\n}\n\n/**\n * Pick a random value from an array\n *\n * @param values Array to pick a random value from\n * @param random Random number generator, default is Math.random\n * @returns Random value\n */\nexport function pickRandomArray<T>(values: T[], random: RandomFn = Math.random): T {\n  return values[randomInt(0, values.length - 1, random)];\n}\n\n/**\n * Shuffle an array of values\n *\n * Code is based on: https://www.npmjs.com/package/shuffle-array\n *\n * @param values Array of values to shuffle\n * @param newArray If true, returns a new array instead of modifying the old array\n * @param random Random number generator, default is Math.random\n */\nexport function shuffleArray<T>(values: T[], newArray = false, random: RandomFn = Math.random): T[] {\n  const collection = newArray ? [...values] : values;\n\n  // Perform an O(n) pass through the array to swap values\n  let length = collection.length;\n  while (length > 0) {\n    // Pick a random index in the array to swap\n    const randomIndex = Math.floor(random() * length);\n    length -= 1;\n\n    // Swap the two values in the array\n    const temp = collection[length];\n    collection[length] = collection[randomIndex];\n    collection[randomIndex] = temp;\n  }\n\n  return collection;\n}\n\n/**\n * Wrap a number to a given range.\n *\n * Code is from: https://stackoverflow.com/questions/50054676/what-is-the-correct-way-to-get-a-number-modulo-range-such-that-the-returned-valu\n *\n * @param x Number to wrap\n * @param min Minimum number in range\n * @param max Maximum number in range\n * @param includeMax If set to true, the maximum value is included in this range. The default is true.\n * @returns Wrapped value\n */\nexport function wrapNumber(x: number, min: number, max: number, includeMax = true): number {\n  const d = max - min;\n  return x === max && includeMax ? x : ((((x - min) % d) + d) % d) + min;\n}\n\n/**\n * Clamp a value between two numbers, so min <= x <= max\n *\n * @param x Number to clamp\n * @param min Minimum value\n * @param max Maximum value\n * @returns Clamped number\n */\nexport function clamp(x: number, min: number, max: number): number {\n  return Math.min(Math.max(x, min), max);\n}\n\n/**\n * Test if a number is between two values\n *\n * @param x Number to test\n * @param min Minimum value\n * @param max Maximum value\n * @returns True if min <= x <= max\n */\nexport function isBetween(x: number, min: number, max: number): boolean {\n  return x >= min && x <= max;\n}\n\n/**\n * Determine if a number is basically an integer\n *\n * @param x The number\n * @param threshhold Threshshold to use\n * @returns True if X is basically an integer\n */\nexport function isBasicallyInteger(x: number, threshhold = 0): boolean {\n  return isBetween(x, Math.round(x) - threshhold, Math.round(x) + threshhold);\n}\n\n/**\n * Test if an angel is between two other angles\n *\n * @param angle   Angle to test\n * @param a       First angle to test against\n * @param b       Second angle to test against\n * @returns       True if the angle is between the two angles\n */\nexport function isAngleBetween(angle: number, a: number, b: number): boolean {\n  const maxDistance = normalizeAngle(b - a); // 90 degrees\n  return Math.abs(normalizeAngle(a - angle)) < maxDistance && Math.abs(normalizeAngle(b - angle)) < maxDistance;\n}\n\n/**\n * Normalize angle between -PI and +PI radians\n *\n * @param angle     Angle to normalize\n * @return          Normalized angle\n */\nexport function normalizeAngle(angle: number): number {\n  return Math.atan2(Math.sin(angle), Math.cos(angle));\n}\n\n/**\n * Pick the number that is closest to the target number\n *\n * @param input Number to get\n * @param values List of target numbers\n */\nexport function pickClosest(input: number, values: number[]): number {\n  let minDistance = Infinity;\n  let closestValue = input;\n  for (const number of values) {\n    const distance = Math.abs(input - number);\n    if (distance < minDistance) {\n      minDistance = distance;\n      closestValue = number;\n    }\n  }\n\n  return closestValue;\n}\n\n/**\n * Perform a linear interpolation between one and two\n *\n * @param one First number\n * @param two Second number\n * @param percent Linear interpolation\n */\nexport function lerp(one: number, two: number, percent: number): number {\n  return (1 - percent) * one + two * percent;\n}\n","/**\n * Represents a key that can be pressed on the keyboard.\n *\n * Letter keys are handled as lowercase input, even if the \"Shift\" key is pressed.\n */\nexport enum Key {\n  Up,\n  Down,\n  Left,\n  Right,\n\n  Control,\n  Alt,\n  Delete,\n  Backspace,\n  CapsLock,\n  Enter,\n  Escape,\n  End,\n  Shift,\n  PageUp,\n  PageDown,\n  Pause,\n  Cancel,\n  ScrollLock,\n\n  A,\n  B,\n  C,\n  D,\n  E,\n  F,\n  G,\n  H,\n  I,\n  J,\n  K,\n  L,\n  M,\n  N,\n  O,\n  P,\n  Q,\n  R,\n  S,\n  T,\n  U,\n  V,\n  W,\n  X,\n  Y,\n  Z,\n\n  F1,\n  F2,\n  F3,\n  F4,\n  F5,\n  F6,\n  F7,\n  F8,\n  F9,\n  F10,\n  F11,\n  F12,\n\n  Num1,\n  Num2,\n  Num3,\n  Num4,\n  Num5,\n  Num6,\n  Num7,\n  Num8,\n  Num9,\n  Num0,\n\n  Amperstand,\n  Asterisk,\n  At,\n  BackSlash,\n  BraceLeft,\n  BraceRight,\n  Caret,\n  CloseBracket,\n  Colon,\n  Comma,\n  Dollar,\n  EqualSign,\n  ExclamationPoint,\n  GreaterThan,\n  LeftParen,\n  LessThan,\n  Minus,\n  Hashtag,\n  OpenBracket,\n  Period,\n  QuestionMark,\n  SingleQuote,\n  DoubleQuote,\n  RightParen,\n  Semicolon,\n  ForwardSlash,\n  Underscore,\n  Space,\n  Tick,\n  Tilda,\n}\n\n/**\n * Represents buttons on a gamepad.\n * Not all gamepads support all buttons.\n */\nexport enum GamepadButton {\n  Up = 12,\n  Down = 13,\n  Left = 14,\n  Right = 15,\n  ACross = 0,\n  BCircle = 1,\n  XSquare = 2,\n  YTriangle = 3,\n  Select = 8, // [X]     [ ]\n  Start = 9, //  [ ]     [X]\n  Center = 16,\n  LeftBumper = 4, // LB, Top button\n  RightBumper = 5, // RB, Top button\n  LeftStickCenter = 10,\n  RightStickCenter = 11,\n}\n\n/**\n * Represent axes on the gamepad sticks.\n * Not all gamepads support all axes.\n */\nexport enum GamepadAxis {\n  LeftStickX = 0, // Negative = Left, Positive = Right\n  LeftStickY = 1, // Negative = Up, Positive = Down\n  RightStickX = 2, // Negative = Left, Positive = Right\n  RightStickY = 3, // Negative = Up, Positive = Down\n  LeftTrigger = 4, // LT, Bottom button\n  RightTrigger = 5, // RT, Bottom button\n}\n\n/**\n * All mouse buttons\n */\nexport enum MouseButton {\n  Left,\n  Middle,\n  Right,\n}\n\n/**\n * Map the JavaScript string of event.key to a Key enum\n */\nconst KEY_MAP: Record<string, Key> = {\n  ['ArrowUp']: Key.Up,\n  ['ArrowDown']: Key.Down,\n  ['ArrowLeft']: Key.Left,\n  ['ArrowRight']: Key.Right,\n\n  ['Control']: Key.Control,\n  ['Alt']: Key.Alt,\n  ['Delete']: Key.Delete,\n  ['Backspace']: Key.Backspace,\n  ['CapsLock']: Key.CapsLock,\n  ['Enter']: Key.Enter,\n  ['Escape']: Key.Escape,\n  ['End']: Key.End,\n  ['Shift']: Key.Shift,\n  ['PageUp']: Key.PageUp,\n  ['PageDown']: Key.PageDown,\n  ['Pause']: Key.Pause,\n  ['Cancel']: Key.Cancel,\n  ['ScrollLock']: Key.ScrollLock,\n\n  ['a']: Key.A,\n  ['b']: Key.B,\n  ['c']: Key.C,\n  ['d']: Key.D,\n  ['e']: Key.E,\n  ['f']: Key.F,\n  ['g']: Key.G,\n  ['h']: Key.H,\n  ['i']: Key.I,\n  ['j']: Key.J,\n  ['k']: Key.K,\n  ['l']: Key.L,\n  ['m']: Key.M,\n  ['n']: Key.N,\n  ['o']: Key.O,\n  ['p']: Key.P,\n  ['q']: Key.Q,\n  ['r']: Key.R,\n  ['s']: Key.S,\n  ['t']: Key.T,\n  ['u']: Key.U,\n  ['v']: Key.V,\n  ['w']: Key.W,\n  ['x']: Key.X,\n  ['y']: Key.Y,\n  ['z']: Key.Z,\n\n  ['A']: Key.A,\n  ['B']: Key.B,\n  ['C']: Key.C,\n  ['D']: Key.D,\n  ['E']: Key.E,\n  ['F']: Key.F,\n  ['G']: Key.G,\n  ['H']: Key.H,\n  ['I']: Key.I,\n  ['J']: Key.J,\n  ['K']: Key.K,\n  ['L']: Key.L,\n  ['M']: Key.M,\n  ['N']: Key.N,\n  ['O']: Key.O,\n  ['P']: Key.P,\n  ['Q']: Key.Q,\n  ['R']: Key.R,\n  ['S']: Key.S,\n  ['T']: Key.T,\n  ['U']: Key.U,\n  ['V']: Key.V,\n  ['W']: Key.W,\n  ['X']: Key.X,\n  ['Y']: Key.Y,\n  ['Z']: Key.Z,\n\n  ['F1']: Key.F1,\n  ['F2']: Key.F2,\n  ['F3']: Key.F3,\n  ['F4']: Key.F4,\n  ['F5']: Key.F5,\n  ['F6']: Key.F6,\n  ['F7']: Key.F7,\n  ['F8']: Key.F8,\n  ['F9']: Key.F9,\n  ['F10']: Key.F10,\n  ['F11']: Key.F11,\n  ['F12']: Key.F12,\n\n  ['1']: Key.Num1,\n  ['2']: Key.Num2,\n  ['3']: Key.Num3,\n  ['4']: Key.Num4,\n  ['5']: Key.Num5,\n  ['6']: Key.Num6,\n  ['7']: Key.Num7,\n  ['8']: Key.Num8,\n  ['9']: Key.Num9,\n  ['0']: Key.Num0,\n\n  ['&']: Key.Amperstand,\n  ['*']: Key.Asterisk,\n  ['@']: Key.At,\n  ['\\\\']: Key.BackSlash,\n  ['{']: Key.BraceLeft,\n  ['}']: Key.BraceRight,\n  ['^']: Key.Caret,\n  [']']: Key.CloseBracket,\n  [':']: Key.Colon,\n  [',']: Key.Comma,\n  ['$']: Key.Dollar,\n  ['=']: Key.EqualSign,\n  ['!']: Key.ExclamationPoint,\n  ['>']: Key.GreaterThan,\n  ['(']: Key.LeftParen,\n  ['<']: Key.LessThan,\n  ['-']: Key.Minus,\n  ['#']: Key.Hashtag,\n  ['[']: Key.OpenBracket,\n  ['.']: Key.Period,\n  ['?']: Key.QuestionMark,\n  // eslint-disable-next-line quotes\n  [\"'\"]: Key.SingleQuote,\n  ['\"']: Key.DoubleQuote,\n  [')']: Key.RightParen,\n  [';']: Key.Semicolon,\n  ['/']: Key.ForwardSlash,\n  ['_']: Key.Underscore,\n  [' ']: Key.Space,\n  ['`']: Key.Tick,\n  ['~']: Key.Tilda,\n};\n\n/**\n * Map the JavaScript event.button to a mouse button\n */\nconst MOUSE_MAP: Record<number, MouseButton> = {\n  [0]: MouseButton.Left,\n  [1]: MouseButton.Middle,\n  [2]: MouseButton.Right,\n};\n\n// Other internal constants\nconst LEFT_TRIGGER_BUTTON = 6;\nconst RIGHT_TRIGGER_BUTTON = 7;\n\n// Store data about a single gamepad\nclass GamepadState {\n  public buttonsStart: Set<GamepadButton>;\n  public buttonsDown: Set<GamepadButton>;\n  public buttonsReleased: Set<GamepadButton>;\n  public axes: number[];\n\n  public static fromGamepad(gamepad: Gamepad): GamepadState {\n    return {\n      buttonsStart: new Set(),\n      buttonsDown: new Set(),\n      buttonsReleased: new Set(),\n      axes: [...gamepad.axes, gamepad.buttons[LEFT_TRIGGER_BUTTON].value, gamepad.buttons[RIGHT_TRIGGER_BUTTON].value],\n    };\n  }\n}\n\n/**\n * Handles all user-input from the game\n */\nexport class InputManager {\n  private readonly canvas: HTMLCanvasElement;\n\n  private keysStart: Set<Key> = new Set();\n  private keysDown: Set<Key> = new Set();\n  private keysReleased: Set<Key> = new Set();\n\n  private gamepadState: Record<number, GamepadState> = {};\n\n  private mouseCoords: [number, number] = [0, 0];\n  private mouseMovement: [number, number] = [0, 0]; // Used with Pointer Lock\n  private mouseStart: Set<MouseButton> = new Set();\n  private mouseDown: Set<MouseButton> = new Set();\n  private mouseReleased: Set<MouseButton> = new Set();\n  private _pointerLockEnabled = false;\n\n  constructor(canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n\n    // Keyboard\n    canvas.addEventListener('keydown', this.onKeyDown.bind(this));\n    canvas.addEventListener('keyup', this.onKeyRelease.bind(this));\n\n    // Gamepad\n    window.addEventListener('gamepadconnected', this.onGamepadConnected.bind(this));\n    window.addEventListener('gamepaddisconnected', this.onGamepadDisconnected.bind(this));\n\n    // Mouse\n    canvas.addEventListener('mousemove', this.onMouseMove.bind(this));\n    canvas.addEventListener('mousedown', this.onMouseDown.bind(this));\n    canvas.addEventListener('mouseup', this.onMouseUp.bind(this));\n    canvas.addEventListener('click', this.onPointerLockClick.bind(this));\n    document.addEventListener('pointerlockchange', this.onPointerLockChange.bind(this));\n    document.addEventListener('pointerlockerror', this.onPointerLockError.bind(this));\n  }\n\n  /**\n   * Called whenever a key is pressed on the keyboard.\n   * Fired multiple times if a key is continually pressed in.\n   */\n  private onKeyDown(event: KeyboardEvent) {\n    const key = KEY_MAP[event.key];\n    if (typeof key !== 'undefined') {\n      this.keysDown.add(key);\n\n      if (!event.repeat) {\n        this.keysStart.add(key);\n      }\n    }\n  }\n\n  /**\n   * Called when a key is released from being pressed\n   */\n  private onKeyRelease(event: KeyboardEvent) {\n    const key = KEY_MAP[event.key];\n    if (typeof key !== 'undefined') {\n      this.keysDown.delete(key);\n      this.keysReleased.add(key);\n    }\n  }\n\n  /**\n   * Called internally by the game engine to clear all keys started and keys released.\n   */\n  _clearKeyTick(): void {\n    this.keysStart.clear();\n    this.keysReleased.clear();\n  }\n\n  /**\n   * Test if a key has just been pressed down.\n   * Only returns true during this tick, and then the event is cleared.\n   */\n  public isKeyStarted(key: Key): boolean {\n    return this.keysStart.has(key);\n  }\n\n  /**\n   * Test if a key is currently pressed down.\n   * Will continue to return true as long as the key is being pressed down.\n   */\n  public isKeyDown(key: Key): boolean {\n    return this.keysDown.has(key);\n  }\n\n  /**\n   * Test if a key has just been released.\n   * Only returns true during this tick, and then the event is cleared.\n   */\n  public isKeyReleased(key: Key): boolean {\n    return this.keysReleased.has(key);\n  }\n\n  /**\n   * Called when a gamepad is connected to the browser\n   */\n  private onGamepadConnected(event: GamepadEvent) {\n    const gamepad = event.gamepad;\n    if (gamepad.mapping !== 'standard') {\n      return; /* Unsupported gamepad */\n    }\n\n    this.gamepadState[gamepad.index] = GamepadState.fromGamepad(gamepad);\n  }\n\n  /**\n   * Called by the browser when a gamepad is disconnected from the system\n   */\n  private onGamepadDisconnected(event: GamepadEvent) {\n    const gamepad = event.gamepad;\n    delete this.gamepadState[gamepad.index];\n  }\n\n  /**\n   * Called internally by the game engine to update gamepads\n   */\n  _updateGamepad(): void {\n    // Make sure we support gamepads\n    if (typeof navigator.getGamepads === 'undefined') {\n      return;\n    }\n\n    // Update the individual gamepads by querrying the new state\n    for (const gamepad of navigator.getGamepads()) {\n      if (gamepad === null) {\n        continue;\n      }\n\n      const gamepadState = this.gamepadState[gamepad.index] || GamepadState.fromGamepad(gamepad);\n      const buttonsStart: Set<GamepadButton> = new Set();\n      const buttonsDown: Set<GamepadButton> = new Set();\n      const buttonsReleased: Set<GamepadButton> = new Set();\n\n      // Loop over every button supported\n      for (const buttonKey in GamepadButton) {\n        if (isNaN(Number(buttonKey))) {\n          continue; /* Skip enum string values */\n        }\n\n        const button: GamepadButton = Number(buttonKey) as GamepadButton;\n        if (gamepad.buttons[button].pressed) {\n          buttonsDown.add(button);\n\n          if (!gamepadState.buttonsDown.has(button)) {\n            buttonsStart.add(button);\n          }\n        } else {\n          if (gamepadState.buttonsDown.has(button)) {\n            buttonsReleased.add(button);\n          }\n        }\n      }\n\n      // Also get the axes for the left and right triggers\n      const axes = [\n        ...gamepad.axes,\n        gamepad.buttons[LEFT_TRIGGER_BUTTON].value,\n        gamepad.buttons[RIGHT_TRIGGER_BUTTON].value,\n      ];\n\n      // Replace the existing state with the new state\n      Object.assign(this.gamepadState[gamepad.index], { buttonsStart, buttonsDown, buttonsReleased, axes });\n    }\n  }\n\n  /**\n   * Get the list of connected gamepads, might be empty\n   */\n  public getConnectedGamepads(): number[] {\n    return Object.keys(this.gamepadState)\n      .map(Number)\n      .filter((key) => !Number.isNaN(key));\n  }\n\n  /**\n   * Test if a given gamepad is connected\n   */\n  public isGamepadConnected(gamepad: number): boolean {\n    return typeof this.gamepadState[gamepad] !== 'undefined';\n  }\n\n  /**\n   * Test if a button has just been pressed down on a gamepad.\n   * Only returns true during this tick, and then the event is cleared.\n   */\n  public isGamepadButtonStarted(gamepad: number, button: GamepadButton): boolean {\n    const gamepadState = this.gamepadState[gamepad];\n    if (typeof gamepadState === 'undefined') {\n      return false;\n    }\n\n    return gamepadState.buttonsStart.has(button);\n  }\n\n  /**\n   * Test if a button is currently pressed down on a gamepad.\n   * Will continue to return true as long as the button is being pressed down.\n   */\n  public isGamepadButtonDown(gamepad: number, button: GamepadButton): boolean {\n    const gamepadState = this.gamepadState[gamepad];\n    if (typeof gamepadState === 'undefined') {\n      return false;\n    }\n\n    return gamepadState.buttonsDown.has(button);\n  }\n\n  /**\n   * Test if a button has just been released on a gamepad.\n   * Only returns true during this tick, and then the event is cleared.\n   */\n  public isGamepadButtonReleased(gamepad: number, button: GamepadButton): boolean {\n    const gamepadState = this.gamepadState[gamepad];\n    if (typeof gamepadState === 'undefined') {\n      return false;\n    }\n\n    return gamepadState.buttonsReleased.has(button);\n  }\n\n  /**\n   * Get the value of an axis on the gamepad.\n   *\n   * The range of values for a joystickwill be between -1.0 and 1.0.\n   * The range of values for the LT and RT is between 0.0 and 1.0.\n   */\n  public getGamepadAxis(gamepad: number, axis: GamepadAxis): number {\n    const gamepadState = this.gamepadState[gamepad];\n    if (typeof gamepadState === 'undefined') {\n      return 0;\n    }\n\n    return gamepadState.axes[axis];\n  }\n\n  /**\n   * Get the current status of the pointer lock\n   */\n  public get pointerLockEnabled(): boolean {\n    return this._pointerLockEnabled;\n  }\n\n  /**\n   * Enable or disable pointer lock, which fixes the mouse to the center of the Canvas.\n   */\n  public set pointerLockEnabled(enabled: boolean) {\n    this._pointerLockEnabled = enabled;\n    if (!enabled) {\n      document.exitPointerLock();\n    }\n  }\n\n  /**\n   * Called when the mouse moves across the Canvas element\n   */\n  private onMouseMove(event: MouseEvent) {\n    this.mouseCoords = [\n      (event.clientX * this.canvas.width) / this.canvas.clientWidth,\n      (event.clientY * this.canvas.height) / this.canvas.clientHeight,\n    ];\n\n    if (document.pointerLockElement === this.canvas) {\n      this.mouseMovement = [event.movementX, event.movementY];\n    } else {\n      this.mouseMovement = [0, 0];\n    }\n  }\n\n  /**\n   * Called when a mouse button is pressed\n   */\n  private onMouseDown(event: MouseEvent) {\n    const button = MOUSE_MAP[event.button];\n    if (typeof button !== 'undefined') {\n      this.mouseDown.add(button);\n      this.mouseStart.add(button);\n    }\n  }\n\n  /**\n   * Called when a mouse button is released\n   */\n  private onMouseUp(event: MouseEvent) {\n    const button = MOUSE_MAP[event.button];\n    if (typeof button !== 'undefined') {\n      this.mouseDown.delete(button);\n      this.mouseReleased.delete(button);\n    }\n  }\n\n  /**\n   * Called whenever the Canvas element is clicked to enable the pointer lock.\n   * Probably not necessary, but just in case.\n   */\n  private onPointerLockClick() {\n    if (this._pointerLockEnabled) {\n      this.canvas.requestPointerLock();\n    }\n  }\n\n  /**\n   * Called whenever the pointer lock is changed\n   */\n  private onPointerLockChange(_event: Event) {\n    if (document.pointerLockElement !== this.canvas) {\n      this.mouseMovement = [0, 0];\n    }\n  }\n\n  /**\n   * Called on a pointer lock error\n   * Sometimes, the user might need to click multiple times before pointer lock is re-engaged\n   */\n  private onPointerLockError(_error: Event) {}\n\n  /**\n   * Called internally by the game engine to clear all keys started and keys released.\n   */\n  _clearMouseTick(): void {\n    this.mouseStart.clear();\n    this.mouseReleased.clear();\n    this.mouseMovement = [0, 0];\n  }\n\n  /**\n   * Test if a mouse button has just been pressed\n   * Only returns true during this tick, and then the event is cleared.\n   */\n  public isMouseButtonStarted(button: MouseButton): boolean {\n    return this.mouseStart.has(button);\n  }\n\n  /**\n   * Test if a mouse button is currently pressed down.\n   * Will continue to return true as long as the button is being pressed down.\n   */\n  public isMouseButtonDown(button: MouseButton): boolean {\n    return this.mouseDown.has(button);\n  }\n\n  /**\n   * Test if a mouse button has just been released.\n   * Only returns true during this tick, and then the event is cleared.\n   */\n  public isMouseButtonReleased(button: MouseButton): boolean {\n    return this.mouseReleased.has(button);\n  }\n\n  /**\n   * Get the X position of the mouse relative to the location inside the canvas.\n   *\n   * Coordinates are calculated from the top-left corner of the Canvas\n   */\n  public getMouseX(): number {\n    return this.mouseCoords[0];\n  }\n\n  /**\n   * Get the Y position of the mouse relative to the location inside the canvas\n   *\n   * Coordinates are calculated from the top-left corner of the Canvas\n   */\n  public getMouseY(): number {\n    return this.mouseCoords[1];\n  }\n\n  /**\n   * Get the X movement of the mouse since the last movement event\n   *\n   * Coordinates are calculated from the top-left corner of the Canvas\n   *\n   * Returns 0 if pointer lock is not enabled\n   */\n  public getMouseMovementX(): number {\n    return this.mouseMovement[0];\n  }\n\n  /**\n   * Get the Y movement of the mouse since the last movement event\n   *\n   * Coordinates are calculated from the top-left corner of the Canvas\n   *\n   * Returns 0 if pointer lock is not enabled\n   */\n  public getMouseMovementY(): number {\n    return this.mouseMovement[1];\n  }\n}\n","/// How many units should one wall texture take up?\nexport const WALL_SCALE = 8;\n\n//           Height\n//    |    |        |    |\n//    |    |/======\\|    |\n//    |    ||      ||    |\n//    [Side][Center][Side]\n//\nexport const WALL_HEIGHT = 18;\nexport const WALL_DEPTH = 1;\nexport const INSIDE_DEPTH = 30;\n\n/// How wide is a single wall collection in WALL_SCALE units (Left + Center Arch + Right)\nexport const UNITS_WIDE = 3; /* Whole Number */\n\n/// Total width of a single wall collection\nexport const TOTAL_WIDTH = UNITS_WIDE * WALL_SCALE;\n\n/// How far out is the camera from the wall\nexport const CAMERA_DIST_OUT = 15;\n","import { Entity, EntityState } from 'engine/entity';\nimport { Key } from 'engine/input';\nimport { TOTAL_WIDTH, INSIDE_DEPTH, CAMERA_DIST_OUT } from './Constants';\nimport { DoorSelectorArea } from 'areas/DoorSelectorArea';\nimport * as THREE from 'three';\n\nconst MOVEMENT_DELAY_TICKS = 10;\n\n// Speed to move left and right\nconst MOVING_SPEED_TICKS = 40;\nconst MOVEMENT_SPEED = TOTAL_WIDTH / MOVING_SPEED_TICKS;\n\n// Speed to zoom in\nconst ZOOM_SPEED_TICKS = 80;\nconst ZOOM_DISTANCE = INSIDE_DEPTH / 2 + CAMERA_DIST_OUT;\nconst ZOOM_SPEED = ZOOM_DISTANCE / ZOOM_SPEED_TICKS;\n\nenum Timer {\n  ClearMovementDelay,\n  MoveLeft,\n  MoveRight,\n  ZoomIn,\n}\n\n/**\n * Camera that moves left and right in the maze\n */\nexport class MazeCamera implements EntityState {\n  public readonly tags: string[] = ['camera'];\n\n  private entity: Entity<this>;\n  private camera: THREE.PerspectiveCamera;\n\n  private relativePosition: number;\n  private movingTick = 1;\n\n  constructor(relativePosition = 0) {\n    this.relativePosition = relativePosition;\n  }\n\n  onCreate(entity: Entity<this>): void {\n    this.entity = entity;\n\n    // Build the camera\n    this.camera = new THREE.PerspectiveCamera(\n      50,\n      this.entity.area.game.canvasWidth / this.entity.area.game.canvasHeight,\n      0.001,\n      1000,\n    );\n    this.camera.position.set(CAMERA_DIST_OUT, 4.8, -this.relativePosition * TOTAL_WIDTH);\n    this.camera.rotateY(Math.PI / 2);\n    this.entity.area.camera = this.camera;\n    this.entity.object = this.camera;\n\n    // Add a bit of movement delay for when the room first loads\n    this.entity.setTimer(Timer.ClearMovementDelay, MOVEMENT_DELAY_TICKS, false);\n\n    // Indicate the starting position of the camera\n    this.doorSelector.movedTo(this.relativePosition);\n  }\n\n  onDestroy(): void {}\n\n  onDispose(): void {}\n\n  onStep(): void {\n    // Make sure the camera is scaled properly\n    this.camera.aspect = this.entity.area.game.canvasWidth / this.entity.area.game.canvasHeight;\n    this.camera.updateProjectionMatrix();\n\n    // Handle user input\n    const input = this.entity.area.game.input;\n    const doorSelector = this.doorSelector;\n    if (!this.isMoving) {\n      if (input.isKeyStarted(Key.Left) && this.relativePosition > doorSelector.smallestIndex) {\n        this.moveLeft();\n      } else if (input.isKeyStarted(Key.Right) && this.relativePosition < doorSelector.largestIndex) {\n        this.moveRight();\n      } else if (input.isKeyStarted(Key.Up) && doorSelector.canEnterDoor(this.relativePosition)) {\n        this.zoomIn();\n      }\n    }\n  }\n\n  // Cast the current area into the DoorSelectorArea interface\n  private get doorSelector(): DoorSelectorArea {\n    return this.entity.area.state as DoorSelectorArea;\n  }\n\n  // Test if the camera is currently moving\n  public get isMoving(): boolean {\n    return this.movingTick !== 0;\n  }\n\n  // Start animation to move the camera one position left\n  private moveLeft() {\n    this.movingTick = 1;\n    this.entity.setTimer(Timer.MoveLeft, 1, true);\n  }\n\n  // Start animation to move the camera one position right\n  private moveRight() {\n    this.movingTick = 1;\n    this.entity.setTimer(Timer.MoveRight, 1, true);\n  }\n\n  // Start animation to zoom the camera in to the door\n  private zoomIn() {\n    this.movingTick = 1;\n    this.entity.setTimer(Timer.ZoomIn, 1, true);\n  }\n\n  /**\n   * On Timer\n   */\n  onTimer(timerIndex: number): void {\n    switch (timerIndex) {\n      case Timer.ClearMovementDelay:\n        return this.clearMovementDelay();\n\n      case Timer.MoveLeft:\n        return this.moveCameraLeftTick();\n\n      case Timer.MoveRight:\n        return this.moveCameraRightTick();\n\n      case Timer.ZoomIn:\n        return this.zoomInTick();\n    }\n  }\n\n  // Allow movement\n  private clearMovementDelay() {\n    this.movingTick = 0;\n  }\n\n  // Single tick for moving the camera left animation\n  private moveCameraLeftTick() {\n    this.camera.position.z += MOVEMENT_SPEED;\n    this.movingTick += 1;\n\n    if (this.movingTick > MOVING_SPEED_TICKS) {\n      this.relativePosition -= 1;\n      this.movingTick = 0;\n      this.entity.clearTimer(Timer.MoveLeft);\n\n      this.doorSelector.movedTo(this.relativePosition);\n    }\n  }\n\n  // Single tick for moving the camera right animation\n  private moveCameraRightTick() {\n    this.camera.position.z -= MOVEMENT_SPEED;\n    this.movingTick += 1;\n\n    if (this.movingTick > MOVING_SPEED_TICKS) {\n      this.relativePosition += 1;\n      this.movingTick = 0;\n      this.entity.clearTimer(Timer.MoveRight);\n\n      this.doorSelector.movedTo(this.relativePosition);\n    }\n  }\n\n  // Single tick for zooming the camera in\n  private zoomInTick() {\n    this.camera.position.x -= ZOOM_SPEED;\n    this.movingTick += 1;\n\n    if (this.movingTick > ZOOM_SPEED_TICKS) {\n      this.movingTick = 0;\n      this.entity.clearTimer(Timer.ZoomIn);\n\n      this.doorSelector.enterDoor(this.relativePosition);\n    }\n  }\n\n  onDraw(_g2d: CanvasRenderingContext2D): void {}\n}\n","import { MainArea } from 'areas/MainArea';\nimport { TitleArea } from 'areas/TitleArea';\nimport { FadeOutEffect } from './FadeOutEffect';\n\n/**\n * Animation for when you are trapped in a room\n */\nexport class DeadEndAnimation extends FadeOutEffect {\n  constructor() {\n    super(10, 0.05, 30 * 5);\n  }\n\n  protected onTick(alpha: number): void {\n    const mainArea = this.entity.area.state as MainArea;\n    mainArea.ambient.volume = 1 - alpha;\n  }\n\n  protected onFinish(): void {\n    const mainArea = this.entity.area.state as MainArea;\n    mainArea.ambient.stop();\n\n    this.entity.area.game.setArea(new TitleArea());\n  }\n}\n","import { Entity, EntityState } from 'engine/entity';\nimport { clamp } from 'engine/helpers';\n\n/**\n * Fade the screen from black to clear\n */\nexport class FadeInEffect implements EntityState {\n  public readonly tags: string[] = [];\n\n  protected entity: Entity<this>;\n\n  private ticks: number;\n  private fade: number;\n  private alpha = 1;\n\n  /**\n   * Construct a new fade effect\n   *\n   * @param ticks Number of ticks between each fade\n   * @param fade Amount to fade on each tick\n   */\n  constructor(ticks = 2, fade = 0.1) {\n    this.ticks = Math.abs(ticks);\n    this.fade = Math.abs(fade);\n  }\n\n  onCreate(entity: Entity<this>): void {\n    this.entity = entity;\n    this.entity.setTimer(1, this.ticks, true);\n  }\n\n  onDestroy(): void {}\n\n  onDispose(): void {}\n\n  onStep(): void {}\n\n  onTimer(timerIndex: number): void {\n    if (timerIndex === 1) {\n      this.onTick(this.alpha);\n      this.fadeIn();\n    }\n  }\n\n  /// Can be overridden\n  protected onTick(_alpha: number): void {}\n\n  /**\n   * Slowly fade out to black\n   */\n  private fadeIn(): void {\n    this.alpha = clamp(this.alpha - this.fade, 0, 1);\n    if (this.alpha <= 0) {\n      this.entity.clearTimer(1);\n      this.onFinish();\n    }\n  }\n\n  /// Can be overridden\n  protected onFinish(): void {}\n\n  onDraw(g2d: CanvasRenderingContext2D): void {\n    g2d.globalAlpha = this.alpha;\n    g2d.fillStyle = 'black';\n    g2d.fillRect(0, 0, this.entity.area.overlayWidth, this.entity.area.overlayHeight);\n    g2d.globalAlpha = 1;\n  }\n}\n","import { Entity, EntityState } from 'engine/entity';\nimport { clamp } from 'engine/helpers';\n\n/**\n * Special fade-out effect\n */\nexport class FadeOutEffect implements EntityState {\n  public readonly tags: string[] = [];\n\n  protected entity: Entity<this>;\n\n  private ticks: number;\n  private fade: number;\n  private delay: number;\n  private alpha = 0;\n\n  /**\n   * Construct a new fade effect\n   *\n   * @param ticks Number of ticks between each fade\n   * @param fade Amount to fade on each tick\n   */\n  constructor(ticks = 10, fade = 0.1, delay = 1) {\n    this.ticks = Math.abs(ticks);\n    this.fade = Math.abs(fade);\n    this.delay = Math.max(delay, 1);\n  }\n\n  onCreate(entity: Entity<this>): void {\n    this.entity = entity;\n    this.entity.setTimer(1, this.ticks + this.delay, false);\n  }\n\n  onDestroy(): void {}\n\n  onDispose(): void {}\n\n  onStep(): void {}\n\n  onTimer(timerIndex: number): void {\n    if (timerIndex === 1) {\n      this.entity.setTimer(1, this.ticks, true);\n      this.onTick(this.alpha);\n      this.fadeOut();\n    }\n  }\n\n  /// Can be overridden\n  protected onTick(_alpha: number): void {}\n\n  /**\n   * Slowly fade out to black\n   */\n  private fadeOut(): void {\n    this.alpha = clamp(this.alpha + this.fade, 0, 1);\n    if (this.alpha >= 1) {\n      this.entity.clearTimer(1);\n      this.onFinish();\n    }\n  }\n\n  /// Can be overridden\n  protected onFinish(): void {}\n\n  onDraw(g2d: CanvasRenderingContext2D): void {\n    g2d.globalAlpha = this.alpha;\n    g2d.fillStyle = 'black';\n    g2d.fillRect(0, 0, this.entity.area.overlayWidth, this.entity.area.overlayHeight);\n    g2d.globalAlpha = 1;\n  }\n}\n","import { MainArea } from 'areas/MainArea';\nimport { TitleArea } from 'areas/TitleArea';\nimport { Entity, EntityState } from 'engine/entity';\nimport { clamp } from 'engine/helpers';\nimport { TorchEntity } from 'entities/layout/TorchEntity';\n\nconst STARTING_TICKS = 3 * 60 * 30; // 3 minutes\nconst MAX_TICKS_BRIGHTNESS = 3 * 60 * 30;\nconst TICKS_PER_DOOR = 5 * 30; // 5 Seconds\n\nconst LOSE_DELAY_TICKS = 5 * 30;\n\nenum Timer {\n  TickTorch,\n  RestartGame,\n}\n\n/**\n * Slowly fade out the torches in the room\n */\nexport class TorchTimer implements EntityState {\n  public readonly tags: string[] = [];\n\n  private entity: Entity<this>;\n  private currentTick = STARTING_TICKS;\n\n  onCreate(entity: Entity<this>): void {\n    this.entity = entity;\n\n    this.entity.setTimer(Timer.TickTorch, 1, true);\n  }\n\n  /**\n   * Add time back onto the clock when a door is entered\n   */\n  public enteredDoor(): void {\n    this.currentTick += TICKS_PER_DOOR;\n  }\n\n  onDestroy(): void {}\n\n  onDispose(): void {}\n\n  onStep(): void {}\n\n  onTimer(timerIndex: number): void {\n    switch (timerIndex) {\n      case Timer.TickTorch:\n        return this.tickTorch();\n\n      case Timer.RestartGame:\n        return this.restartGame();\n    }\n  }\n\n  /**\n   * Happens every time the torch is ticked\n   */\n  private tickTorch(): void {\n    const intensity = clamp(this.currentTick / MAX_TICKS_BRIGHTNESS, 0, 1);\n    for (const entity of this.entity.area.findEntities('torch-entity') as Entity<TorchEntity>[]) {\n      entity.state.setTorchIntensity(intensity);\n    }\n\n    // Don't lose ticks while the camera is moving\n    const camera = (this.entity.area.state as MainArea).camera;\n    if (!camera.isMoving) {\n      this.currentTick -= 1;\n      console.log(this.currentTick);\n      if (this.currentTick <= 0) {\n        this.entity.clearTimer(Timer.TickTorch);\n\n        for (const entity of this.entity.area.findEntities('camera')) {\n          entity.destroy();\n        }\n\n        this.entity.setTimer(Timer.RestartGame, LOSE_DELAY_TICKS, false);\n      }\n    }\n  }\n\n  /**\n   * Called when the game should be reset\n   */\n  private restartGame(): void {\n    const mainArea = this.entity.area.state as MainArea;\n    mainArea.ambient.stop();\n\n    this.entity.area.game.setArea(new TitleArea());\n  }\n\n  onDraw(_g2d: CanvasRenderingContext2D): void {}\n}\n","import { Entity, EntityState } from 'engine/entity';\nimport { WALL_SCALE, UNITS_WIDE, TOTAL_WIDTH, WALL_HEIGHT, WALL_DEPTH, INSIDE_DEPTH } from '../Constants';\nimport { TorchEntity } from './TorchEntity';\nimport * as THREE from 'three';\n\n/// Defines how a single archway looks\nexport interface ArchProps {\n  text?: string;\n  relativePosition: number;\n}\n\n// These values are computed from the geometry\nconst ARCH_HEIGHT = 8.5;\nconst ARCH_WIDTH = 6.5;\nconst MINI_WIDTH = 1;\nconst MINI_HEIGHT = 1;\nconst SIDE_WIDTH = (UNITS_WIDE * WALL_SCALE - ARCH_WIDTH) / 2;\n\n// Static data storage\nconst PLANE_GEOMETRY = new THREE.PlaneGeometry();\nconst LEFT_SIDE_MATERIAL = new THREE.MeshStandardMaterial();\nconst RIGHT_SIDE_MATERIAL = new THREE.MeshStandardMaterial();\nconst TOP_WALL_MATERIAL = new THREE.MeshStandardMaterial();\nconst LEFT_MINI_MATERIAL = new THREE.MeshStandardMaterial();\nconst RIGHT_MINI_MATERIAL = new THREE.MeshStandardMaterial();\nconst ARCH_MATERIAL = new THREE.MeshStandardMaterial();\nconst INSIDE_SIDE_MATERIAL = new THREE.MeshStandardMaterial();\nconst INSIDE_TOP_MATERIAL = new THREE.MeshStandardMaterial();\nconst TORCH_MATERIAL = new THREE.MeshStandardMaterial();\nconst FONT_MATERIAL = new THREE.MeshStandardMaterial({ color: 0x705024 });\n\n/**\n * Group of arches in the maze.\n *\n * Be sure to destroy this entity before moving to another room, or there will be a memory leak!\n */\nexport class ArchGroup implements EntityState, TorchEntity {\n  public readonly tags: string[] = ['layout-entity', 'torch-entity'];\n\n  private entity: Entity<this>;\n  private entries: ArchProps[];\n\n  // Resources that must be freed\n  private leftSideWall: THREE.InstancedMesh;\n  private rightSideWall: THREE.InstancedMesh;\n  private topWall: THREE.InstancedMesh;\n  private leftMiniCube: THREE.InstancedMesh;\n  private rightMiniCube: THREE.InstancedMesh;\n  private arch: THREE.InstancedMesh;\n  private leftInsideWall: THREE.InstancedMesh;\n  private rightInsideWall: THREE.InstancedMesh;\n  private topInsideWall: THREE.InstancedMesh;\n  private torch: THREE.InstancedMesh;\n  private textGeometry: THREE.TextGeometry[];\n\n  // Lights for dimming\n  private torchLights: Map<number, THREE.PointLight[]>;\n\n  constructor(entries: ArchProps[]) {\n    this.entries = entries;\n    this.torchLights = new Map(entries.map(({ relativePosition }) => [relativePosition, []]));\n  }\n\n  onCreate(entity: Entity<this>): void {\n    this.entity = entity;\n    this.entity.object = new THREE.Group();\n\n    // Build all of the materials for the walls\n    ArchGroup.buildMaterial(LEFT_SIDE_MATERIAL, 'Brick', this.buildLeftSideTexture.bind(this));\n    ArchGroup.buildMaterial(RIGHT_SIDE_MATERIAL, 'Brick', this.buildRightSideTexture.bind(this));\n    ArchGroup.buildMaterial(TOP_WALL_MATERIAL, 'Brick', this.buildTopTexture.bind(this));\n    ArchGroup.buildMaterial(LEFT_MINI_MATERIAL, 'Brick', this.buildLeftMiniTexture.bind(this));\n    ArchGroup.buildMaterial(RIGHT_MINI_MATERIAL, 'Brick', this.buildRightMiniTexture.bind(this));\n    ArchGroup.buildMaterial(ARCH_MATERIAL, 'ArchBrick', this.buildArchTexture.bind(this));\n    ArchGroup.buildMaterial(INSIDE_SIDE_MATERIAL, 'Brick', this.buildInsideSideTexture.bind(this));\n    ArchGroup.buildMaterial(INSIDE_TOP_MATERIAL, 'Brick', this.buildInsideTopTexture.bind(this));\n\n    // Create all of the instanced meshes\n    this.leftSideWall = new THREE.InstancedMesh(PLANE_GEOMETRY, LEFT_SIDE_MATERIAL, this.entries.length);\n    this.rightSideWall = new THREE.InstancedMesh(PLANE_GEOMETRY, RIGHT_SIDE_MATERIAL, this.entries.length);\n    this.topWall = new THREE.InstancedMesh(PLANE_GEOMETRY, TOP_WALL_MATERIAL, this.entries.length);\n    this.leftMiniCube = new THREE.InstancedMesh(PLANE_GEOMETRY, LEFT_MINI_MATERIAL, this.entries.length);\n    this.rightMiniCube = new THREE.InstancedMesh(PLANE_GEOMETRY, RIGHT_MINI_MATERIAL, this.entries.length);\n\n    const archObject: THREE.Mesh = this.entity.area.game.assets.getObject('Arch') as THREE.Mesh;\n    this.arch = new THREE.InstancedMesh(archObject.geometry, ARCH_MATERIAL, this.entries.length);\n\n    this.leftInsideWall = new THREE.InstancedMesh(PLANE_GEOMETRY, INSIDE_SIDE_MATERIAL, this.entries.length);\n    this.rightInsideWall = new THREE.InstancedMesh(PLANE_GEOMETRY, INSIDE_SIDE_MATERIAL, this.entries.length);\n    this.topInsideWall = new THREE.InstancedMesh(PLANE_GEOMETRY, INSIDE_TOP_MATERIAL, this.entries.length);\n\n    const torch: THREE.Mesh = this.entity.area.game.assets.getObject('WallTorch') as THREE.Mesh;\n    TORCH_MATERIAL.copy(torch.material as THREE.MeshStandardMaterial);\n    this.torch = new THREE.InstancedMesh(torch.geometry, TORCH_MATERIAL, this.entries.length * 2);\n\n    this.entity.object.add(\n      this.leftSideWall,\n      this.rightSideWall,\n      this.topWall,\n      this.leftMiniCube,\n      this.rightMiniCube,\n      this.arch,\n      this.leftInsideWall,\n      this.rightInsideWall,\n      this.topInsideWall,\n      this.torch,\n    );\n\n    // Build the text geometries\n    const font = this.entity.area.game.assets.getFont('Number');\n    this.textGeometry = this.entries.map(({ text = '' }) => {\n      return new THREE.TextGeometry(text, { font, size: 0.8, height: 1, curveSegments: 1 });\n    });\n\n    // Build all of the instanced objects\n    for (const [index, { relativePosition }] of this.entries.entries()) {\n      // Left and right walls\n      const leftSideTransform = new THREE.Matrix4()\n        .makeScale(1, WALL_HEIGHT, SIDE_WIDTH)\n        .multiply(new THREE.Matrix4().makeRotationY(Math.PI / 2))\n        .setPosition(0, WALL_HEIGHT / 2, SIDE_WIDTH / 2 + ARCH_WIDTH / 2 + -relativePosition * TOTAL_WIDTH);\n      this.leftSideWall.setMatrixAt(index, leftSideTransform);\n\n      const rightSideTransform = new THREE.Matrix4()\n        .makeScale(1, WALL_HEIGHT, SIDE_WIDTH)\n        .multiply(new THREE.Matrix4().makeRotationY(Math.PI / 2))\n        .setPosition(0, WALL_HEIGHT / 2, -SIDE_WIDTH / 2 - ARCH_WIDTH / 2 + -relativePosition * TOTAL_WIDTH);\n      this.rightSideWall.setMatrixAt(index, rightSideTransform);\n\n      // Top of the arch\n      const topTransform = new THREE.Matrix4()\n        .makeScale(1, WALL_HEIGHT - ARCH_HEIGHT, ARCH_WIDTH)\n        .multiply(new THREE.Matrix4().makeRotationY(Math.PI / 2))\n        .setPosition(0, ARCH_HEIGHT + (WALL_HEIGHT - ARCH_HEIGHT) / 2, -relativePosition * TOTAL_WIDTH);\n      this.topWall.setMatrixAt(index, topTransform);\n\n      // Mini boxes between the sides and top\n      const leftMiniTransform = new THREE.Matrix4()\n        .makeScale(1, MINI_HEIGHT, MINI_WIDTH)\n        .multiply(new THREE.Matrix4().makeRotationY(Math.PI / 2))\n        .setPosition(0, ARCH_HEIGHT - MINI_HEIGHT / 2, (ARCH_WIDTH - MINI_WIDTH) / 2 + -relativePosition * TOTAL_WIDTH);\n      this.leftMiniCube.setMatrixAt(index, leftMiniTransform);\n\n      const rightMiniTransform = new THREE.Matrix4()\n        .makeScale(1, MINI_HEIGHT, MINI_WIDTH)\n        .multiply(new THREE.Matrix4().makeRotationY(Math.PI / 2))\n        .setPosition(\n          0,\n          ARCH_HEIGHT - MINI_HEIGHT / 2,\n          (-ARCH_WIDTH + MINI_WIDTH) / 2 + -relativePosition * TOTAL_WIDTH,\n        );\n      this.rightMiniCube.setMatrixAt(index, rightMiniTransform);\n\n      // The arch itself\n      const archTransform = new THREE.Matrix4()\n        .makeScale(WALL_DEPTH * 2, 0.5, 0.5)\n        .setPosition(0, -0.2, -relativePosition * TOTAL_WIDTH);\n      this.arch.setMatrixAt(index, archTransform);\n\n      // Tunnel inside of the arch\n      const leftInsideTransform = new THREE.Matrix4()\n        .makeScale(INSIDE_DEPTH - WALL_DEPTH, ARCH_HEIGHT, 1)\n        .multiply(new THREE.Matrix4().makeRotationY(Math.PI))\n        .setPosition(\n          -WALL_DEPTH / 2 - (INSIDE_DEPTH - WALL_DEPTH) / 2,\n          ARCH_HEIGHT / 2,\n          ARCH_WIDTH / 2 + -relativePosition * TOTAL_WIDTH,\n        );\n      this.leftInsideWall.setMatrixAt(index, leftInsideTransform);\n\n      const rightInsideTransform = new THREE.Matrix4()\n        .makeScale(INSIDE_DEPTH - WALL_DEPTH, ARCH_HEIGHT, 1)\n        .setPosition(\n          -WALL_DEPTH / 2 - (INSIDE_DEPTH - WALL_DEPTH) / 2,\n          ARCH_HEIGHT / 2,\n          -ARCH_WIDTH / 2 + -relativePosition * TOTAL_WIDTH,\n        );\n      this.rightInsideWall.setMatrixAt(index, rightInsideTransform);\n\n      const topInsideTransform = new THREE.Matrix4()\n        .makeScale(INSIDE_DEPTH - WALL_DEPTH, 1, ARCH_WIDTH)\n        .multiply(new THREE.Matrix4().makeRotationX(Math.PI / 2))\n        .setPosition(-WALL_DEPTH / 2 - (INSIDE_DEPTH - WALL_DEPTH) / 2, ARCH_HEIGHT, -relativePosition * TOTAL_WIDTH);\n      this.topInsideWall.setMatrixAt(index, topInsideTransform);\n\n      // Torches\n      const leftTorchTransform = new THREE.Matrix4()\n        .makeScale(0.5, 1, 0.5)\n        .setPosition(WALL_DEPTH, 4.4, 3.175 + -relativePosition * TOTAL_WIDTH);\n      this.torch.setMatrixAt(2 * index, leftTorchTransform);\n\n      const rightTorchTransform = new THREE.Matrix4()\n        .makeScale(0.5, 1, 0.5)\n        .setPosition(WALL_DEPTH, 4.4, -3.175 + -relativePosition * TOTAL_WIDTH);\n      this.torch.setMatrixAt(2 * index + 1, rightTorchTransform);\n\n      // Torch lights\n      const leftTorchLight: THREE.PointLight = new THREE.PointLight(0xffd050, 1, 13, 1);\n      leftTorchLight.position.set(WALL_DEPTH + 0.3, 5.3, 3.175 + -relativePosition * TOTAL_WIDTH);\n      this.entity.object.add(leftTorchLight);\n\n      const rightTorchLight: THREE.PointLight = leftTorchLight.clone();\n      rightTorchLight.position.set(WALL_DEPTH + 0.3, 5.3, -3.175 + -relativePosition * TOTAL_WIDTH);\n      this.entity.object.add(rightTorchLight);\n\n      this.torchLights.get(relativePosition).push(leftTorchLight, rightTorchLight);\n\n      // 3D Text\n      const textGeometry = this.textGeometry[index];\n      textGeometry.computeBoundingBox();\n      const boundingBox = textGeometry.boundingBox;\n      const textWidth = boundingBox.max.x - boundingBox.min.x;\n      const textHeight = boundingBox.max.y - boundingBox.min.y;\n\n      const textMesh = new THREE.Mesh(textGeometry, FONT_MATERIAL);\n      textMesh.rotation.set(0, Math.PI / 2, 0);\n      textMesh.position.set(-0.8, ARCH_HEIGHT + 2 * textHeight, textWidth / 2 + -relativePosition * TOTAL_WIDTH);\n      this.entity.object.add(textMesh);\n    }\n\n    // Mark all of the instanced meshes for update\n    this.leftSideWall.instanceMatrix.needsUpdate = true;\n    this.rightSideWall.instanceMatrix.needsUpdate = true;\n    this.topWall.instanceMatrix.needsUpdate = true;\n    this.leftMiniCube.instanceMatrix.needsUpdate = true;\n    this.rightMiniCube.instanceMatrix.needsUpdate = true;\n    this.arch.instanceMatrix.needsUpdate = true;\n    this.leftInsideWall.instanceMatrix.needsUpdate = true;\n    this.rightInsideWall.instanceMatrix.needsUpdate = true;\n    this.topInsideWall.instanceMatrix.needsUpdate = true;\n    this.torch.instanceMatrix.needsUpdate = true;\n  }\n\n  private static buildMaterial(\n    material: THREE.MeshStandardMaterial,\n    prefix: string,\n    buildTexture: (name: string) => THREE.Texture,\n  ) {\n    material.map = buildTexture(`${prefix}Color`);\n    material.normalMap = buildTexture(`${prefix}Normal`);\n    material.aoMap = buildTexture(`${prefix}Occlusion`);\n  }\n\n  private buildLeftSideTexture(name: string): THREE.Texture {\n    return this.dynamicallyBuildTexture(name, 'LeftSide', {\n      repeatX: SIDE_WIDTH / WALL_SCALE,\n      repeatY: WALL_HEIGHT / WALL_SCALE,\n      offsetX: 0,\n      offsetY: (WALL_HEIGHT / WALL_SCALE) % 1.0,\n    });\n  }\n\n  private buildRightSideTexture(name: string): THREE.Texture {\n    return this.dynamicallyBuildTexture(name, 'RightSide', {\n      repeatX: SIDE_WIDTH / WALL_SCALE,\n      repeatY: WALL_HEIGHT / WALL_SCALE,\n      offsetX: ((SIDE_WIDTH + ARCH_WIDTH) / WALL_SCALE) % 1.0,\n      offsetY: (WALL_HEIGHT / WALL_SCALE) % 1.0,\n    });\n  }\n\n  private buildTopTexture(name: string): THREE.Texture {\n    return this.dynamicallyBuildTexture(name, 'Top', {\n      repeatX: ARCH_WIDTH / WALL_SCALE,\n      repeatY: (WALL_HEIGHT - ARCH_HEIGHT) / WALL_SCALE,\n      offsetX: (SIDE_WIDTH / WALL_SCALE) % 1.0,\n      offsetY: ((ARCH_HEIGHT / WALL_SCALE) % 1.0) + ((WALL_HEIGHT / WALL_SCALE) % 1.0),\n    });\n  }\n\n  private buildLeftMiniTexture(name: string): THREE.Texture {\n    return this.dynamicallyBuildTexture(name, 'LeftMini', {\n      repeatX: MINI_WIDTH / WALL_SCALE,\n      repeatY: MINI_HEIGHT / WALL_SCALE,\n      offsetX: (SIDE_WIDTH / WALL_SCALE) % 1.0,\n      offsetY: ((MINI_HEIGHT / WALL_SCALE) % 1.0) + ((ARCH_HEIGHT / WALL_SCALE) % 1.0),\n    });\n  }\n\n  private buildRightMiniTexture(name: string): THREE.Texture {\n    return this.dynamicallyBuildTexture(name, 'RightMini', {\n      repeatX: MINI_WIDTH / WALL_SCALE,\n      repeatY: MINI_HEIGHT / WALL_SCALE,\n      offsetX: ((SIDE_WIDTH + ARCH_WIDTH - MINI_WIDTH) / WALL_SCALE) % 1.0,\n      offsetY: ((MINI_HEIGHT / WALL_SCALE) % 1.0) + ((ARCH_HEIGHT / WALL_SCALE) % 1.0),\n    });\n  }\n\n  private buildArchTexture(name: string): THREE.Texture {\n    return this.dynamicallyBuildTexture(name, 'Arch', {\n      repeatX: 3 / 4,\n      repeatY: 3 / 4,\n    });\n  }\n\n  private buildInsideSideTexture(name: string): THREE.Texture {\n    return this.dynamicallyBuildTexture(name, 'InsideSide', {\n      repeatX: (INSIDE_DEPTH - WALL_DEPTH) / WALL_SCALE,\n      repeatY: ARCH_HEIGHT / WALL_SCALE,\n    });\n  }\n\n  private buildInsideTopTexture(name: string): THREE.Texture {\n    return this.dynamicallyBuildTexture(name, 'InsideTop', {\n      repeatX: (INSIDE_DEPTH - WALL_DEPTH) / WALL_SCALE,\n      repeatY: ARCH_WIDTH / WALL_SCALE,\n    });\n  }\n\n  /**\n   * Create and save a texture inside the resources with the given repeats and offsets\n   *\n   * @param imageName Name of the image to load\n   * @param suffix Suffix to uniquely identify the texture\n   */\n  private dynamicallyBuildTexture(\n    imageName: string,\n    suffix: string,\n    {\n      repeatX,\n      repeatY,\n      offsetX = 0,\n      offsetY = 0,\n    }: { repeatX: number; repeatY: number; offsetX?: number; offsetY?: number },\n  ): THREE.Texture {\n    const assets = this.entity.area.game.assets;\n    const textureName = `${imageName}-${suffix}`;\n\n    if (assets.hasTexture(textureName)) {\n      return assets.getTexture(textureName);\n    }\n\n    const image = assets.getImage(imageName);\n    const texture = new THREE.Texture(image);\n    texture.needsUpdate = true;\n    texture.wrapS = THREE.RepeatWrapping;\n    texture.wrapT = THREE.RepeatWrapping;\n    texture.repeat.set(repeatX, repeatY);\n    texture.offset.set(offsetX, offsetY);\n\n    assets.saveTexture(textureName, texture);\n    return texture;\n  }\n\n  public dispose(): void {\n    this.entity.destroy();\n  }\n\n  public setTorchPosition(relativePosition: number): void {\n    // Disable all torches\n    this.torchLights.forEach((torches) => torches.forEach((torch) => (torch.visible = false)));\n\n    // Enable the center, left, and right torches\n    const centerTorches = this.torchLights.get(relativePosition) ?? [];\n    const leftTorches = this.torchLights.get(relativePosition - 1) ?? [];\n    const rightTorches = this.torchLights.get(relativePosition + 1) ?? [];\n\n    centerTorches.forEach((torch) => (torch.visible = true));\n    leftTorches.forEach((torch) => (torch.visible = true));\n    rightTorches.forEach((torch) => (torch.visible = true));\n  }\n\n  public setTorchIntensity(brightness: number): void {\n    this.torchLights.forEach((torches) => torches.forEach((torch) => (torch.intensity = brightness)));\n  }\n\n  onDestroy(): void {}\n\n  onDispose(): void {\n    this.leftSideWall.dispose();\n    this.rightSideWall.dispose();\n    this.topWall.dispose();\n    this.leftMiniCube.dispose();\n    this.rightMiniCube.dispose();\n    this.arch.dispose();\n    this.leftInsideWall.dispose();\n    this.rightInsideWall.dispose();\n    this.topInsideWall.dispose();\n    this.torch.dispose();\n\n    for (const textGeometry of this.textGeometry) {\n      textGeometry.dispose();\n    }\n  }\n\n  onStep(): void {}\n  onTimer(_timerIndex: number): void {}\n  onDraw(_g2d: CanvasRenderingContext2D): void {}\n}\n","import { Entity, EntityState } from 'engine/entity';\nimport { TOTAL_WIDTH, WALL_DEPTH, WALL_HEIGHT, WALL_SCALE } from '../Constants';\nimport { TorchEntity } from './TorchEntity';\nimport * as THREE from 'three';\n\nexport interface BlankWallProps {\n  relativePosition: number;\n}\n\n// Static data storage\nconst PLANE_GEOMETRY = new THREE.PlaneGeometry();\nconst BLANK_WALL_MATERIAL = new THREE.MeshStandardMaterial();\nconst TORCH_MATERIAL = new THREE.MeshStandardMaterial();\n\n/**\n * Group of blank walls in the maze.\n *\n * Be sure to destroy this entity before moving to another room, or there will be a memory leak!\n */\nexport class BlankWallGroup implements EntityState, TorchEntity {\n  public readonly tags: string[] = ['layout-entity', 'torch-entity'];\n\n  private entity: Entity<this>;\n  private entries: BlankWallProps[];\n\n  // Resources that must be freed\n  private wall: THREE.InstancedMesh;\n  private torch: THREE.InstancedMesh;\n\n  // Lights for dimming\n  private torchLights: Map<number, THREE.PointLight[]>;\n\n  constructor(entries: BlankWallProps[]) {\n    this.entries = entries;\n    this.torchLights = new Map(entries.map(({ relativePosition }) => [relativePosition, []]));\n  }\n\n  onCreate(entity: Entity<this>): void {\n    this.entity = entity;\n    this.entity.object = new THREE.Group();\n\n    // Wall texture\n    BLANK_WALL_MATERIAL.map = this.buildWallTexture('BrickColor');\n    BLANK_WALL_MATERIAL.normalMap = this.buildWallTexture('BrickNormal');\n    BLANK_WALL_MATERIAL.aoMap = this.buildWallTexture('BrickOcclusion');\n\n    // Create all of the instanced meshes\n    this.wall = new THREE.InstancedMesh(PLANE_GEOMETRY, BLANK_WALL_MATERIAL, this.entries.length);\n\n    const torch: THREE.Mesh = this.entity.area.game.assets.getObject('WallTorch') as THREE.Mesh;\n    TORCH_MATERIAL.copy(torch.material as THREE.MeshStandardMaterial);\n    this.torch = new THREE.InstancedMesh(torch.geometry, TORCH_MATERIAL, this.entries.length);\n\n    this.entity.object.add(this.wall, this.torch);\n\n    // Build all of the instanced objects\n    for (const [index, { relativePosition }] of this.entries.entries()) {\n      // The wall object\n      const wallTransform = new THREE.Matrix4()\n        .makeScale(1, WALL_HEIGHT, TOTAL_WIDTH)\n        .multiply(new THREE.Matrix4().makeRotationY(Math.PI / 2))\n        .setPosition(0, WALL_HEIGHT / 2, -relativePosition * TOTAL_WIDTH);\n      this.wall.setMatrixAt(index, wallTransform);\n\n      // Torch\n      const torchTransform = new THREE.Matrix4()\n        .makeScale(0.5, 1, 0.5)\n        .setPosition(0, 4.4, -relativePosition * TOTAL_WIDTH);\n      this.torch.setMatrixAt(index, torchTransform);\n\n      // Torch Light\n      const torchLight: THREE.PointLight = new THREE.PointLight(0xffd050, 1, 10, 1);\n      torchLight.position.set(WALL_DEPTH + 0.3, 5.3, -relativePosition * TOTAL_WIDTH);\n      this.entity.object.add(torchLight);\n      this.torchLights.get(relativePosition).push(torchLight);\n    }\n\n    // Mark all of the instanced meshes for update\n    this.wall.instanceMatrix.needsUpdate = true;\n    this.torch.instanceMatrix.needsUpdate = true;\n  }\n\n  /**\n   * Build the texture to use for the side wall\n   */\n  private buildWallTexture(imageName: string): THREE.Texture {\n    const assets = this.entity.area.game.assets;\n    const textureName = `${imageName}-BlankWall`;\n\n    if (assets.hasTexture(textureName)) {\n      return assets.getTexture(textureName);\n    }\n\n    const image = assets.getImage(imageName);\n    const texture = new THREE.Texture(image);\n    texture.needsUpdate = true;\n    texture.wrapS = THREE.RepeatWrapping;\n    texture.wrapT = THREE.RepeatWrapping;\n    texture.repeat.set(TOTAL_WIDTH / WALL_SCALE, WALL_HEIGHT / WALL_SCALE);\n\n    assets.saveTexture(textureName, texture);\n    return texture;\n  }\n\n  public dispose(): void {\n    this.entity.destroy();\n  }\n\n  public setTorchPosition(relativePosition: number): void {\n    // Disable all torches\n    this.torchLights.forEach((torches) => torches.forEach((torch) => (torch.visible = false)));\n\n    // Enable the center, left, and right torches\n    const centerTorches = this.torchLights.get(relativePosition) ?? [];\n    const leftTorches = this.torchLights.get(relativePosition - 1) ?? [];\n    const rightTorches = this.torchLights.get(relativePosition + 1) ?? [];\n\n    centerTorches.forEach((torch) => (torch.visible = true));\n    leftTorches.forEach((torch) => (torch.visible = true));\n    rightTorches.forEach((torch) => (torch.visible = true));\n  }\n\n  public setTorchIntensity(brightness: number): void {\n    this.torchLights.forEach((torches) => torches.forEach((torch) => (torch.intensity = brightness)));\n  }\n\n  onDestroy(): void {}\n\n  onDispose(): void {\n    this.wall.dispose();\n    this.torch.dispose();\n  }\n\n  onStep(): void {}\n  onTimer(_timerIndex: number): void {}\n  onDraw(_g2d: CanvasRenderingContext2D): void {}\n}\n","import { Entity, EntityState } from 'engine/entity';\nimport { RandomFn, pickRandomArray, randomFloat } from 'engine/helpers';\nimport { TOTAL_WIDTH, WALL_SCALE } from '../Constants';\nimport TextTexture from '@seregpie/three.text-texture';\nimport * as seededRandom from 'seedrandom';\nimport * as THREE from 'three';\n\n// Anything left unspecified is randomized or set to default value\nexport interface GraffitiProps {\n  seed?: string;\n  text?: string;\n  font?: GraffitiFontProps | BuiltInFont;\n  width?: number;\n  angle?: number;\n}\n\nexport interface GraffitiFontProps {\n  alignment?: string;\n  backgroundColor?: string;\n  color?: string;\n  fontFamily?: string;\n  fontSize?: number;\n  fontStyle?: string;\n  fontVariant?: string;\n  fontWeight?: string;\n  lineGap?: number;\n  padding?: number;\n  strokeColor?: string;\n  strokeWidth?: number;\n}\n\n// All built-in fonts the game can generate\nexport enum BuiltInFont {\n  Underground = 'Underground',\n  AAnotherTag = 'A Another Tag',\n  AAttackGraffiti = 'A Attack Graffiti',\n  ADrippingMarker = 'A Dripping Marker',\n  BarrioRifa = 'Barrio Rifa',\n  Bopollux = 'Bopollux',\n  DJGross = 'DJ Gross',\n  Elevenoone = 'Elevenoone',\n  GangBangCrime = 'Gang Bang Crime',\n  Graffonti = 'Graffonti',\n  ILostItInTheStreets = 'I Lost It In The Street',\n  Insane = 'Insane',\n  MuroSP = 'Muro SP',\n  NeoBopollux = 'Neo Bopollux',\n  PixelRetroSP = 'Pixel Retro SP',\n  RealBreakerz = 'Real Breakerz',\n  Reskagraf = 'Reskagraf',\n  StreetStyle = 'Street Style',\n}\n\n// All messages that can show\nconst GRAFFITI_MESSAGES: string[] = [\n  'Help!!!',\n  \"I'm lost\",\n  'Numbers...\\nNothing but\\nNumbers...',\n  'There is\\nno end',\n  'No way out',\n  'Some primes are\\ndead ends',\n  \"By the time anyone reads\\nthis, I'm probably dead.\",\n  '127 is DEATH!',\n  'How is this\\npossible?',\n  'What is the\\npattern?',\n  'Composite\\nIs\\nDEATH',\n  'Comprosoft\\nwas here',\n  'The Prime Number Maze\\nWilliam Paulsen',\n  'Infinity!',\n  'Hamming = 1',\n  'I am going\\ninsane',\n  'Trapped!',\n\n  '<Prime>', // Special Case: Show a random prime\n];\n\n// List of random primes that can appear as graffiti\n// prettier-ignore\nconst SOME_PRIMES: number[] = [\n  2,   3,   5,   7,   11,  13,  17,  19,  23,  29,  31,  37,  41,\n  43,  47,  53,  59,  61,  67,  71,  73,  79,  83,  89,  97,  101,\n  103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167,\n  173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239,\n  241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\n  317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397,\n  401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467,\n  479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569,\n  571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\n  647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733,\n  739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823,\n  827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911,\n  919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997\n];\n\n// Certain fonts do not work well with certain types of text\ninterface FontDetails {\n  lowercaseOnly?: boolean /* Default: false */;\n  noNumbers?: boolean /* Default: false */;\n  noPunctuation?: boolean /* Default: false */;\n  noNewline?: boolean /* Default: false */;\n  outline?: number /* Default: 0 */;\n}\n\nconst DEFAULT_OUTLINE = 0.05;\nconst BUILT_IN_FONT_DETAILS: Record<BuiltInFont, FontDetails> = {\n  [BuiltInFont.Underground]: { lowercaseOnly: true, noNumbers: true, outline: DEFAULT_OUTLINE },\n  [BuiltInFont.AAnotherTag]: { outline: DEFAULT_OUTLINE },\n  [BuiltInFont.AAttackGraffiti]: { outline: DEFAULT_OUTLINE },\n  [BuiltInFont.ADrippingMarker]: { outline: DEFAULT_OUTLINE },\n  [BuiltInFont.BarrioRifa]: { noPunctuation: true },\n  [BuiltInFont.Bopollux]: { noNumbers: true, noPunctuation: true, outline: DEFAULT_OUTLINE },\n  [BuiltInFont.DJGross]: { noNewline: true },\n  [BuiltInFont.Elevenoone]: {},\n  [BuiltInFont.GangBangCrime]: { outline: DEFAULT_OUTLINE },\n  [BuiltInFont.Graffonti]: { noPunctuation: true },\n  [BuiltInFont.ILostItInTheStreets]: { noNewline: true },\n  [BuiltInFont.Insane]: { lowercaseOnly: true, noNumbers: true, noPunctuation: true },\n  [BuiltInFont.MuroSP]: { noNewline: true },\n  [BuiltInFont.NeoBopollux]: { noNumbers: true, noPunctuation: true, outline: DEFAULT_OUTLINE },\n  [BuiltInFont.PixelRetroSP]: { noPunctuation: true, noNewline: true },\n  [BuiltInFont.RealBreakerz]: { noNewline: true },\n  [BuiltInFont.Reskagraf]: { noPunctuation: true, outline: DEFAULT_OUTLINE },\n  [BuiltInFont.StreetStyle]: {},\n};\n\n// All possible font colors and any supported border colors\ninterface FontColor {\n  color: string;\n  outlineColors: string[];\n}\n\nconst FONT_COLORS: FontColor[] = [\n  { color: 'red', outlineColors: ['black', '#550000'] },\n  { color: '#BDB76B', outlineColors: ['black'] },\n  { color: '#556B2F', outlineColors: ['black'] },\n  { color: 'blue', outlineColors: ['black'] },\n  { color: '#8A2BE2', outlineColors: [] },\n  { color: 'black', outlineColors: [] },\n];\n\n// Static data storage\nconst PLANE_GEOMETRY = new THREE.PlaneGeometry();\n\n// Geometry constants\nconst CENTER_TEXT_Y = 6.5;\nconst DEFAULT_TEXTURE_WIDTH = 8;\nconst NORMAL_SCALE_FACTOR = 2;\nconst MIN_ANGLE = -Math.PI / 6;\nconst MAX_ANGLE = Math.PI / 6;\nconst OUTLINE_PROBABILITY = 0.5;\n\n/**\n * Graffiti that is on top of a blank wall\n */\nexport class Graffiti implements EntityState {\n  public readonly tags: string[] = ['layout-entity'];\n\n  private entity: Entity<this>;\n  private relativePosition: number;\n  private graffitiProps: GraffitiProps;\n\n  // Generated values\n  private width: number;\n  private angle: number;\n\n  // Internal resources that must be freed:\n  private textTexture: TextTexture;\n  private normalTexture: THREE.Texture;\n  private normalCanvas: HTMLCanvasElement;\n  private graffitiMaterial: THREE.MeshStandardMaterial;\n\n  constructor(relativePosition = 0, props: GraffitiProps = {}) {\n    this.relativePosition = relativePosition;\n    this.graffitiProps = props;\n  }\n\n  onCreate(entity: Entity<this>): void {\n    this.entity = entity;\n\n    // Graffiti textures and materials\n    this.generateValues();\n    this.textTexture.loadFontFace().then(() => {\n      this.textTexture.redraw();\n      this.refreshGraffiti();\n    });\n\n    this.normalCanvas = document.createElement('canvas');\n    this.normalTexture = new THREE.Texture(this.normalCanvas);\n    this.graffitiMaterial = new THREE.MeshStandardMaterial({ map: this.textTexture, normalMap: this.normalTexture });\n    this.graffitiMaterial.transparent = true;\n\n    // Graffiti Plane\n    const graffitiPlane = new THREE.Mesh(PLANE_GEOMETRY, this.graffitiMaterial);\n    graffitiPlane.position.set(0.0, CENTER_TEXT_Y, -this.relativePosition * TOTAL_WIDTH);\n    graffitiPlane.rotation.set(0, Math.PI / 2, 0);\n    this.entity.object = graffitiPlane;\n  }\n\n  /**\n   * Handle all of the graffiti generation\n   */\n  private generateValues(): void {\n    const seed = this.graffitiProps.seed ?? Math.random().toString();\n    const prng = seededRandom(seed);\n\n    // Figure out the text\n    let text = this.graffitiProps.text ?? pickRandomArray(GRAFFITI_MESSAGES, prng);\n    if (text === '<Prime>') {\n      // Special Case: Show a random prime\n      text = pickRandomArray(SOME_PRIMES, prng).toString();\n    }\n\n    // Build the font\n    switch (typeof this.graffitiProps.font) {\n      case 'undefined':\n        this.textTexture = Graffiti.generateTextTexture(text, prng);\n        break;\n\n      case 'string':\n        this.textTexture = Graffiti.generateTextTexture(text, prng, this.graffitiProps.font);\n        break;\n\n      default:\n        this.textTexture = new TextTexture({ text, ...this.graffitiProps.font });\n        break;\n    }\n\n    // Set the width and angle\n    this.width = this.graffitiProps.width ?? DEFAULT_TEXTURE_WIDTH;\n    this.angle = this.graffitiProps.angle ?? randomFloat(MIN_ANGLE, MAX_ANGLE, prng);\n  }\n\n  /**\n   * Generate a text texture given the text and an optional built-in font\n   *\n   * @param text Text to show\n   * @param random Random number generator\n   * @param font Name of a built-in font that has already been specified\n   */\n  private static generateTextTexture(text: string, random: RandomFn, font?: BuiltInFont): TextTexture {\n    // Figure out which fonts are allowed when picking a random font\n    const textHasNumber = hasNumber(text);\n    const textHasPunctuation = hasPunctuation(text);\n    const textHasNewline = hasNewline(text);\n    const allowedFontEntries = Object.entries(BUILT_IN_FONT_DETAILS)\n      .filter(\n        ([_, { noNumbers, noPunctuation, noNewline }]) =>\n          !((noNumbers && textHasNumber) || (noPunctuation && textHasPunctuation) || (noNewline && textHasNewline)),\n      )\n      .map(([font, _]) => font as BuiltInFont);\n\n    // Pick a random font, or use the pre-selected one\n    const pickedFont = font ?? pickRandomArray(allowedFontEntries, random);\n    const fontDetails = BUILT_IN_FONT_DETAILS[pickedFont];\n\n    // Text might be lowercase only\n    if (fontDetails.lowercaseOnly) {\n      text = text.toLowerCase();\n    }\n\n    // Pick the font color and outline color\n    const fontColor = pickRandomArray(FONT_COLORS, random);\n    const outlineColor: string | null =\n      fontColor.outlineColors.length > 0 ? pickRandomArray(fontColor.outlineColors) : null;\n\n    // Should the font have an outline\n    let fontOutline = 0;\n    if (fontDetails.outline && outlineColor !== null && random() < OUTLINE_PROBABILITY) {\n      fontOutline = fontDetails.outline;\n    }\n\n    // Build the texture!\n    return new TextTexture({\n      text,\n      fontFamily: pickedFont,\n      fontSize: 96,\n      alignment: 'center',\n      color: fontColor.color,\n      strokeWidth: fontOutline,\n      strokeColor: outlineColor,\n    });\n  }\n\n  /**\n   * Refresh all of the graffiti on the wall\n   *\n   * @param width How wide should the texture be in the room\n   */\n  private refreshGraffiti(width = DEFAULT_TEXTURE_WIDTH) {\n    const relativeHeight = width * (this.textTexture.height / this.textTexture.width);\n    this.entity.object.scale.set(width, relativeHeight, 1);\n    this.entity.object.rotation.x = this.angle;\n\n    this.refreshGraffitiNormalsTexture(width, relativeHeight);\n  }\n\n  /**\n   * Refresh the normal texture given the width and height of the graffiti plane\n   */\n  private refreshGraffitiNormalsTexture(width: number, height: number) {\n    const bricks = this.entity.area.game.assets.getImage('BrickNormal');\n    this.normalCanvas.width = bricks.width * NORMAL_SCALE_FACTOR;\n    this.normalCanvas.height = bricks.height * NORMAL_SCALE_FACTOR;\n\n    const leftX = TOTAL_WIDTH / 2 - width / 2;\n    const leftOffset = (leftX / WALL_SCALE) % 1.0;\n\n    const topY = CENTER_TEXT_Y + height / 2;\n    const topOffset = (topY / WALL_SCALE) % 1.0;\n\n    // Scale, rotate, and translate the texture to match the current plane position\n    const g2d = this.normalCanvas.getContext('2d');\n    g2d.imageSmoothingEnabled = false;\n    g2d.translate(this.normalCanvas.width / 2, this.normalCanvas.height / 2);\n    g2d.scale((WALL_SCALE * NORMAL_SCALE_FACTOR) / width, (WALL_SCALE * NORMAL_SCALE_FACTOR) / height);\n    g2d.rotate(this.angle);\n    g2d.translate(\n      (-this.normalCanvas.width * width) / (WALL_SCALE * NORMAL_SCALE_FACTOR * 2),\n      (-this.normalCanvas.height * height) / (WALL_SCALE * NORMAL_SCALE_FACTOR * 2),\n    );\n    g2d.translate(-leftOffset * bricks.width, topOffset * bricks.height);\n\n    // Draw the individual tiles for the texture\n    for (let x = -2; x <= Math.ceil(width); x += 1) {\n      for (let y = -2; y <= Math.ceil(height); y += 1) {\n        g2d.drawImage(bricks, x * bricks.width, y * bricks.height);\n      }\n    }\n\n    this.normalTexture.needsUpdate = true;\n  }\n\n  public dispose(): void {\n    this.entity.destroy();\n  }\n\n  onDestroy(): void {}\n\n  /**\n   * Free any unused resources when the wall is disposed\n   */\n  onDispose(): void {\n    this.graffitiMaterial.dispose();\n    this.textTexture.dispose();\n    this.normalTexture.dispose();\n  }\n\n  onStep(): void {}\n  onTimer(_timerIndex: number): void {}\n  onDraw(_g2d: CanvasRenderingContext2D): void {}\n}\n\n//\n// String testing functions\n//\nfunction hasNumber(input: string): boolean {\n  return /[0-9]/.test(input);\n}\n\nfunction hasPunctuation(input: string): boolean {\n  return /[!-/:-@[-`{-~}]/.test(input);\n}\n\nfunction hasNewline(input: string): boolean {\n  return /\\n/.test(input);\n}\n","import { Entity, EntityState } from 'engine/entity';\nimport { INSIDE_DEPTH, TOTAL_WIDTH } from '../Constants';\nimport * as THREE from 'three';\n\nconst PLANE_GEOMETRY = new THREE.PlaneGeometry();\nconst PLANE_MATERIAL = new THREE.MeshStandardMaterial();\nconst FLOOR_SCALE = 6;\n\n/**\n * Represents the floor in the maze\n */\nexport class MazeFloor implements EntityState {\n  public readonly tags: string[] = ['layout-entity'];\n\n  private entity: Entity<this>;\n  private readonly width: number;\n\n  /**\n   * Create a new plane for the floor\n   *\n   * @param unitsPerSide Number of unit collections wide on each side\n   */\n  constructor(unitsPerSide = 0) {\n    this.width = 2 * unitsPerSide * TOTAL_WIDTH + TOTAL_WIDTH;\n  }\n\n  onCreate(entity: Entity<this>): void {\n    this.entity = entity;\n\n    // Load and initialize the texture\n    PLANE_MATERIAL.map = this.buildTexture('DirtColor');\n    PLANE_MATERIAL.normalMap = this.buildTexture('DirtNormal');\n    PLANE_MATERIAL.aoMap = this.buildTexture('DirtOcclusion');\n\n    // Build the plane object\n    this.entity.object = new THREE.Mesh(PLANE_GEOMETRY, PLANE_MATERIAL);\n    this.entity.object.position.y = 0.01;\n    this.entity.object.rotation.x = (3 * Math.PI) / 2;\n    this.entity.object.scale.set(2 * INSIDE_DEPTH, this.width, 1);\n  }\n\n  /**\n   * Load a wall texture and configure texture scaling and repeating\n   */\n  private buildTexture(name: string): THREE.Texture {\n    const texture = this.entity.area.game.assets.getTexture(name);\n    texture.wrapS = THREE.RepeatWrapping;\n    texture.wrapT = THREE.RepeatWrapping;\n    texture.repeat.set((2 * INSIDE_DEPTH) / FLOOR_SCALE, this.width / FLOOR_SCALE);\n    texture.offset.set(0.5, 0.5);\n    return texture;\n  }\n\n  onDestroy(): void {}\n  onDispose(): void {}\n  onStep(): void {}\n  onTimer(_timerIndex: number): void {}\n  onDraw(_g2d: CanvasRenderingContext2D): void {}\n}\n","import { Entity, EntityState } from 'engine/entity';\nimport { CAMERA_DIST_OUT, TOTAL_WIDTH, UNITS_WIDE, WALL_HEIGHT, WALL_SCALE } from '../Constants';\nimport * as THREE from 'three';\n\nconst WALL_DEPTH = ((UNITS_WIDE - 1) / 2) * WALL_SCALE;\nconst WALL_OFFSET = 1.25 * WALL_SCALE;\n\nconst BOX_GEOMETRY = new THREE.BoxGeometry(1, 1, 1);\nconst SIDE_MATERIAL = new THREE.MeshStandardMaterial();\n\nexport enum Side {\n  Left,\n  Right,\n}\n\n/**\n * Left or right wall along the main area\n */\nexport class SideWall implements EntityState {\n  public readonly tags: string[] = ['layout-entity'];\n\n  private entity: Entity<this>;\n\n  private side: Side;\n  private relativePosition: number;\n\n  constructor(side: Side, relativePosition = 0) {\n    this.side = side;\n    this.relativePosition = relativePosition;\n  }\n\n  onCreate(entity: Entity<this>): void {\n    this.entity = entity;\n\n    SIDE_MATERIAL.map = this.buildTexture('BrickColor');\n    SIDE_MATERIAL.normalMap = this.buildTexture('BrickNormal');\n    SIDE_MATERIAL.aoMap = this.buildTexture('BrickOcclusion');\n\n    const wall: THREE.Mesh = new THREE.Mesh(BOX_GEOMETRY, SIDE_MATERIAL);\n    wall.scale.set(CAMERA_DIST_OUT * 2, WALL_HEIGHT, WALL_DEPTH);\n    wall.position.set(\n      CAMERA_DIST_OUT / 2 + WALL_DEPTH / 2,\n      WALL_HEIGHT / 2,\n      this.computeSideOffset() + -this.relativePosition * TOTAL_WIDTH,\n    );\n    this.entity.object = wall;\n  }\n\n  /**\n   * Dynamically build the texture to use for the side wall\n   */\n  private buildTexture(imageName: string): THREE.Texture {\n    const assets = this.entity.area.game.assets;\n    const textureName = `${imageName}-Side`;\n\n    if (assets.hasTexture(textureName)) {\n      return assets.getTexture(textureName);\n    }\n\n    const image = assets.getImage(imageName);\n    const texture = new THREE.Texture(image);\n    texture.needsUpdate = true;\n    texture.wrapS = THREE.RepeatWrapping;\n    texture.wrapT = THREE.RepeatWrapping;\n    texture.repeat.set((CAMERA_DIST_OUT * 2) / WALL_SCALE, WALL_HEIGHT / WALL_SCALE);\n\n    assets.saveTexture(textureName, texture);\n    return texture;\n  }\n\n  /**\n   * Compute the offset side at (0,0)\n   */\n  private computeSideOffset(): number {\n    switch (this.side) {\n      case Side.Left:\n        return +WALL_OFFSET / 2 + WALL_DEPTH / 2;\n\n      case Side.Right:\n        return -WALL_OFFSET / 2 - WALL_DEPTH / 2;\n    }\n  }\n\n  onDestroy(): void {}\n  onDispose(): void {}\n  onStep(): void {}\n  onTimer(_timerIndex: number): void {}\n  onDraw(_g2d: CanvasRenderingContext2D): void {}\n}\n","import { Game } from 'engine/game';\nimport { DEFAULT_ERROR_HANDLER, DEFAULT_PROGRESS_HANDLER } from 'engine/assets';\nimport { TitleArea } from 'areas/TitleArea';\nimport './styles.css';\n\n// Textures\nimport BrickColor from 'assets/textures/brick-color.jpg';\nimport BrickNrm from 'assets/textures/brick-normal.jpg';\nimport BrickOcc from 'assets/textures/brick-occ.jpg';\nimport ArchBrickColor from 'assets/textures/arch-bricks-color.jpg';\nimport ArchBrickNrm from 'assets/textures/arch-bricks-normal.jpg';\nimport ArchBrickOcc from 'assets/textures/arch-bricks-occ.jpg';\nimport DirtColor from 'assets/textures/dirt-color.jpg';\nimport DirtNrm from 'assets/textures/dirt-normal.jpg';\nimport DirtOcc from 'assets/textures/dirt-occ.jpg';\n\n// Objects\nimport Arch from 'assets/objects/arch.glb';\nimport WallTorch from 'assets/objects/wall-torch.glb';\n\n// Images\n\n// Sounds\n\n// Music\nimport Ambient from 'assets/music/ambient.ogg';\n\n// Fonts\nimport NumberFont from 'assets/fonts/special-elite.json';\nimport './fonts.css';\n\n// Build the canvas objects\nconst gameCanvas = document.createElement('canvas');\ndocument.body.appendChild(gameCanvas);\n\nconst overlayCanvas = document.createElement('canvas');\noverlayCanvas.setAttribute('tabindex', '0');\noverlayCanvas.classList.add('overlay');\ndocument.body.appendChild(overlayCanvas);\n\nconst game = new Game(gameCanvas, overlayCanvas);\n\n// Configure the \"loading\" text\noverlayCanvas.width = overlayCanvas.clientWidth;\noverlayCanvas.height = overlayCanvas.clientHeight;\nconst g2d = overlayCanvas.getContext('2d');\ng2d.font = '12pt \"Special Elite\"';\ng2d.fillStyle = 'white';\ng2d.textAlign = 'center';\ng2d.textBaseline = 'middle';\ng2d.fillText('Loading game...', overlayCanvas.width / 2, overlayCanvas.height / 2);\n\n// Show loading progress\nlet errorOccured = false;\ngame.assets.progressHandler = (input) => {\n  if (!errorOccured) {\n    drawLoadingProgress(g2d, input);\n  }\n  DEFAULT_PROGRESS_HANDLER(input);\n};\n\n// Show an error message\ngame.assets.errorHandler = (input) => {\n  errorOccured = true;\n  drawLoadingProgress(g2d, input, 'red');\n  DEFAULT_ERROR_HANDLER(input);\n};\n\nloadAllAssets(game)\n  .then((game) => {\n    game.start(new TitleArea());\n  })\n  .catch((error) => {\n    console.log('Failed to load assets: ' + error, error.stack);\n  });\n\n/**\n * Load all of the game assets asynchronously\n */\nasync function loadAllAssets(game: Game): Promise<Game> {\n  await Promise.all([\n    game.assets.loadImage('BrickColor', BrickColor),\n    game.assets.loadImage('BrickNormal', BrickNrm),\n    game.assets.loadImage('BrickOcclusion', BrickOcc),\n    game.assets.loadImage('ArchBrickColor', ArchBrickColor),\n    game.assets.loadImage('ArchBrickNormal', ArchBrickNrm),\n    game.assets.loadImage('ArchBrickOcclusion', ArchBrickOcc),\n    game.assets.loadTexture('DirtColor', DirtColor),\n    game.assets.loadTexture('DirtNormal', DirtNrm),\n    game.assets.loadTexture('DirtOcclusion', DirtOcc),\n\n    game.assets.loadGLTFFile(Arch, (gltf, manager) => {\n      manager.saveObject('Arch', gltf.scene.children[0]);\n    }),\n    game.assets.loadGLTFFile(WallTorch, (gltf, manager) => {\n      manager.saveObject('WallTorch', gltf.scene.children[0]);\n    }),\n\n    game.assets.loadAudioFile('Ambient', Ambient),\n\n    game.assets.loadFont('Number', NumberFont),\n  ]);\n\n  return game;\n}\n\nfunction drawLoadingProgress(g2d: CanvasRenderingContext2D, text: string, color = 'white'): void {\n  g2d.clearRect(0, (5 * overlayCanvas.height) / 8, overlayCanvas.width, (7 * overlayCanvas.height) / 8);\n  g2d.fillStyle = color;\n  g2d.fillText(text, overlayCanvas.width / 2, (3 * overlayCanvas.height) / 4);\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nimport ___CSS_LOADER_URL_IMPORT_0___ from \"../assets/fonts/special-elite.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_1___ from \"../assets/fonts/08-underground.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_2___ from \"../assets/fonts/a-another-tag.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_3___ from \"../assets/fonts/a-attack-graffiti.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_4___ from \"../assets/fonts/a-dripping-marker.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_5___ from \"../assets/fonts/barrio-rifa.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_6___ from \"../assets/fonts/bopollux.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_7___ from \"../assets/fonts/dj-gross.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_8___ from \"../assets/fonts/elevenoone.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_9___ from \"../assets/fonts/gang-bang-crime.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_10___ from \"../assets/fonts/graffonti.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_11___ from \"../assets/fonts/i-lost-it-in-the-street.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_12___ from \"../assets/fonts/insane.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_13___ from \"../assets/fonts/muro-sp.otf\";\nimport ___CSS_LOADER_URL_IMPORT_14___ from \"../assets/fonts/neo-bopollux.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_15___ from \"../assets/fonts/pixo-reto-sp.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_16___ from \"../assets/fonts/real-breakerz.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_17___ from \"../assets/fonts/reskagraf.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_18___ from \"../assets/fonts/street-style.ttf\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_3___);\nvar ___CSS_LOADER_URL_REPLACEMENT_4___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_4___);\nvar ___CSS_LOADER_URL_REPLACEMENT_5___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_5___);\nvar ___CSS_LOADER_URL_REPLACEMENT_6___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_6___);\nvar ___CSS_LOADER_URL_REPLACEMENT_7___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_7___);\nvar ___CSS_LOADER_URL_REPLACEMENT_8___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_8___);\nvar ___CSS_LOADER_URL_REPLACEMENT_9___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_9___);\nvar ___CSS_LOADER_URL_REPLACEMENT_10___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_10___);\nvar ___CSS_LOADER_URL_REPLACEMENT_11___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_11___);\nvar ___CSS_LOADER_URL_REPLACEMENT_12___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_12___);\nvar ___CSS_LOADER_URL_REPLACEMENT_13___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_13___);\nvar ___CSS_LOADER_URL_REPLACEMENT_14___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_14___);\nvar ___CSS_LOADER_URL_REPLACEMENT_15___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_15___);\nvar ___CSS_LOADER_URL_REPLACEMENT_16___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_16___);\nvar ___CSS_LOADER_URL_REPLACEMENT_17___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_17___);\nvar ___CSS_LOADER_URL_REPLACEMENT_18___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_18___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@font-face {\\n  font-family: 'Special Elite';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\n}\\n\\n@font-face {\\n  font-family: 'Underground';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \");\\n}\\n\\n@font-face {\\n  font-family: 'A Another Tag';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_2___ + \");\\n}\\n\\n@font-face {\\n  font-family: 'A Attack Graffiti';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_3___ + \");\\n}\\n\\n@font-face {\\n  font-family: 'A Dripping Marker';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_4___ + \");\\n}\\n\\n@font-face {\\n  font-family: 'Barrio Rifa';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_5___ + \");\\n}\\n\\n@font-face {\\n  font-family: 'Bopollux';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_6___ + \");\\n}\\n\\n@font-face {\\n  font-family: 'DJ Gross';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_7___ + \");\\n}\\n\\n@font-face {\\n  font-family: 'Elevenoone';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_8___ + \");\\n}\\n\\n@font-face {\\n  font-family: 'Gang Bang Crime';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_9___ + \");\\n}\\n\\n@font-face {\\n  font-family: 'Graffonti';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_10___ + \");\\n}\\n\\n@font-face {\\n  font-family: 'I Lost It In The Street';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_11___ + \");\\n}\\n\\n@font-face {\\n  font-family: 'Insane';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_12___ + \");\\n}\\n\\n@font-face {\\n  font-family: 'Muro SP';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_13___ + \");\\n}\\n\\n@font-face {\\n  font-family: 'Neo Bopollux';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_14___ + \");\\n}\\n\\n@font-face {\\n  font-family: 'Pixel Retro SP';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_15___ + \");\\n}\\n\\n@font-face {\\n  font-family: 'Real Breakerz';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_16___ + \");\\n}\\n\\n@font-face {\\n  font-family: 'Reskagraf';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_17___ + \");\\n}\\n\\n@font-face {\\n  font-family: 'Street Style';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_18___ + \");\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/fonts.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,4BAA4B;EAC5B,4CAAwC;AAC1C;;AAEA;EACE,0BAA0B;EAC1B,4CAAyC;AAC3C;;AAEA;EACE,4BAA4B;EAC5B,4CAAwC;AAC1C;;AAEA;EACE,gCAAgC;EAChC,4CAA4C;AAC9C;;AAEA;EACE,gCAAgC;EAChC,4CAA4C;AAC9C;;AAEA;EACE,0BAA0B;EAC1B,4CAAsC;AACxC;;AAEA;EACE,uBAAuB;EACvB,4CAAmC;AACrC;;AAEA;EACE,uBAAuB;EACvB,4CAAmC;AACrC;;AAEA;EACE,yBAAyB;EACzB,4CAAqC;AACvC;;AAEA;EACE,8BAA8B;EAC9B,4CAA0C;AAC5C;;AAEA;EACE,wBAAwB;EACxB,6CAAoC;AACtC;;AAEA;EACE,sCAAsC;EACtC,6CAAkD;AACpD;;AAEA;EACE,qBAAqB;EACrB,6CAAiC;AACnC;;AAEA;EACE,sBAAsB;EACtB,6CAAkC;AACpC;;AAEA;EACE,2BAA2B;EAC3B,6CAAuC;AACzC;;AAEA;EACE,6BAA6B;EAC7B,6CAAuC;AACzC;;AAEA;EACE,4BAA4B;EAC5B,6CAAwC;AAC1C;;AAEA;EACE,wBAAwB;EACxB,6CAAoC;AACtC;;AAEA;EACE,2BAA2B;EAC3B,6CAAuC;AACzC\",\"sourcesContent\":[\"@font-face {\\n  font-family: 'Special Elite';\\n  src: url(assets/fonts/special-elite.ttf);\\n}\\n\\n@font-face {\\n  font-family: 'Underground';\\n  src: url(assets/fonts/08-underground.ttf);\\n}\\n\\n@font-face {\\n  font-family: 'A Another Tag';\\n  src: url(assets/fonts/a-another-tag.ttf);\\n}\\n\\n@font-face {\\n  font-family: 'A Attack Graffiti';\\n  src: url(assets/fonts/a-attack-graffiti.ttf);\\n}\\n\\n@font-face {\\n  font-family: 'A Dripping Marker';\\n  src: url(assets/fonts/a-dripping-marker.ttf);\\n}\\n\\n@font-face {\\n  font-family: 'Barrio Rifa';\\n  src: url(assets/fonts/barrio-rifa.ttf);\\n}\\n\\n@font-face {\\n  font-family: 'Bopollux';\\n  src: url(assets/fonts/bopollux.ttf);\\n}\\n\\n@font-face {\\n  font-family: 'DJ Gross';\\n  src: url(assets/fonts/dj-gross.ttf);\\n}\\n\\n@font-face {\\n  font-family: 'Elevenoone';\\n  src: url(assets/fonts/elevenoone.ttf);\\n}\\n\\n@font-face {\\n  font-family: 'Gang Bang Crime';\\n  src: url(assets/fonts/gang-bang-crime.ttf);\\n}\\n\\n@font-face {\\n  font-family: 'Graffonti';\\n  src: url(assets/fonts/graffonti.ttf);\\n}\\n\\n@font-face {\\n  font-family: 'I Lost It In The Street';\\n  src: url(assets/fonts/i-lost-it-in-the-street.ttf);\\n}\\n\\n@font-face {\\n  font-family: 'Insane';\\n  src: url(assets/fonts/insane.ttf);\\n}\\n\\n@font-face {\\n  font-family: 'Muro SP';\\n  src: url(assets/fonts/muro-sp.otf);\\n}\\n\\n@font-face {\\n  font-family: 'Neo Bopollux';\\n  src: url(assets/fonts/neo-bopollux.ttf);\\n}\\n\\n@font-face {\\n  font-family: 'Pixel Retro SP';\\n  src: url(assets/fonts/pixo-reto-sp.ttf);\\n}\\n\\n@font-face {\\n  font-family: 'Real Breakerz';\\n  src: url(assets/fonts/real-breakerz.ttf);\\n}\\n\\n@font-face {\\n  font-family: 'Reskagraf';\\n  src: url(assets/fonts/reskagraf.ttf);\\n}\\n\\n@font-face {\\n  font-family: 'Street Style';\\n  src: url(assets/fonts/street-style.ttf);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"* {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nbody,\\nhtml {\\n  height: 100%;\\n}\\n\\ncanvas {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\ncanvas.overlay {\\n  z-index: 10;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;;EAEE,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,WAAW;AACb\",\"sourcesContent\":[\"* {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nbody,\\nhtml {\\n  height: 100%;\\n}\\n\\ncanvas {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\ncanvas.overlay {\\n  z-index: 10;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import * as wasm from './prime_number_catacombs_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n/**\n* Compute all catacombs given an input number expressed in base-10\n*\n* Returns `CatacombNumber[]` to the frontend\n* If there is an error, then it returns an empty array\n* @param {string} current_number\n* @param {number} base\n* @param {number | undefined} hamming_distance\n* @returns {any}\n*/\nexport function computeCatacombs(current_number, base, hamming_distance) {\n    var ptr0 = passStringToWasm0(current_number, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.computeCatacombs(ptr0, len0, base, !isLikeNone(hamming_distance), isLikeNone(hamming_distance) ? 0 : hamming_distance);\n    return takeObject(ret);\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nexport function __wbindgen_json_parse(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_randomFillSync_64cc7d048f228ca8() { return handleError(function (arg0, arg1, arg2) {\n    getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n}, arguments) };\n\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nexport function __wbg_getRandomValues_98117e9a7e993920() { return handleError(function (arg0, arg1) {\n    getObject(arg0).getRandomValues(getObject(arg1));\n}, arguments) };\n\nexport function __wbg_process_2f24d6544ea7b200(arg0) {\n    var ret = getObject(arg0).process;\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_is_object(arg0) {\n    const val = getObject(arg0);\n    var ret = typeof(val) === 'object' && val !== null;\n    return ret;\n};\n\nexport function __wbg_versions_6164651e75405d4a(arg0) {\n    var ret = getObject(arg0).versions;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_node_4b517d861cbcb3bc(arg0) {\n    var ret = getObject(arg0).node;\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_is_string(arg0) {\n    var ret = typeof(getObject(arg0)) === 'string';\n    return ret;\n};\n\nexport function __wbg_modulerequire_3440a4bcf44437db() { return handleError(function (arg0, arg1) {\n    var ret = module.require(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_crypto_98fc271021c7d2ad(arg0) {\n    var ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_msCrypto_a2cdb043d2bfe57f(arg0) {\n    var ret = getObject(arg0).msCrypto;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_newnoargs_be86524d73f67598(arg0, arg1) {\n    var ret = new Function(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_call_888d259a5fefc347() { return handleError(function (arg0, arg1) {\n    var ret = getObject(arg0).call(getObject(arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_object_clone_ref(arg0) {\n    var ret = getObject(arg0);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_self_c6fbdfc2918d5e58() { return handleError(function () {\n    var ret = self.self;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_window_baec038b5ab35c54() { return handleError(function () {\n    var ret = window.window;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_globalThis_3f735a5746d41fbd() { return handleError(function () {\n    var ret = globalThis.globalThis;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_global_1bc0b39582740e95() { return handleError(function () {\n    var ret = global.global;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_is_undefined(arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nexport function __wbg_buffer_397eaa4d72ee94dd(arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_new_a7ce447f15ff496f(arg0) {\n    var ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_set_969ad0a60e51d320(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n};\n\nexport function __wbg_length_1eb8fc608a0d4cdb(arg0) {\n    var ret = getObject(arg0).length;\n    return ret;\n};\n\nexport function __wbg_newwithlength_929232475839a482(arg0) {\n    var ret = new Uint8Array(arg0 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_subarray_8b658422a224f479(arg0, arg1, arg2) {\n    var ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport function __wbindgen_memory() {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./fonts.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 9964;\nmodule.exports = webpackEmptyContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/PrimeNumberCatacombsWeb/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkprime_number_catacombs\"] = self[\"webpackChunkprime_number_catacombs\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.v = (exports, wasmModuleId, wasmModuleHash, importsObj) => {\n\tvar req = fetch(__webpack_require__.p + \"\" + wasmModuleHash + \".module.wasm\");\n\tif (typeof WebAssembly.instantiateStreaming === 'function') {\n\t\treturn WebAssembly.instantiateStreaming(req, importsObj)\n\t\t\t.then((res) => (Object.assign(exports, res.instance.exports)));\n\t}\n\treturn req\n\t\t.then((x) => (x.arrayBuffer()))\n\t\t.then((bytes) => (WebAssembly.instantiate(bytes, importsObj)))\n\t\t.then((res) => (Object.assign(exports, res.instance.exports)));\n};","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [856], () => (__webpack_require__(8809)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["webpackThen","webpackExports","completeQueue","completeFunction","queueFunction","deferred","DEAD_END_GRAFFITI","text","font","fontFamily","BuiltInFont","fontSize","alignment","color","angle","MainArea","currentNumber","base","allowComposite","this","catacombNumber","value","isPrime","Math","floor","max","entries","length","ceil","area","computeEntries","buildArea","torchTimer","TorchTimer","createEntity","ambient","createAudio","play","prng","seededRandom","catacombNumbers","computeCatacombs","archways","filter","map","isArchway","numWalls","randomInt","blankWallEntries","Array","fill","showGraffiti","shuffleArray","allEntries","entry","index","undefined","relativePosition","smallestIndex","MazeFloor","archEntries","ArchGroup","BlankWallGroup","Graffiti","seed","DeadEndAnimation","SideWall","Side","largestIndex","camera","MazeCamera","FadeInEffect","findEntities","state","setTorchPosition","clearArea","enteredDoor","destroy","_timerIndex","game","input","isMouseButtonDown","MouseButton","audio","context","resume","_g2d","Timer","TitleArea","setTimer","TestForMovement","_index","setArea","timerIndex","isMoving","hideText","g2d","textAlign","textBaseline","fillStyle","fillText","overlayWidth","beginPath","strokeStyle","lineWidth","strokeText","stroke","metrics","measureText","overlayHeight","actualBoundingBoxDescent","DEFAULT_PROGRESS_HANDLER","console","log","DEFAULT_ERROR_HANDLER","e","Error","AssetsManager","audioLoader","THREE","imageLoader","textureLoader","cubeTextureLoader","objectLoader","materialLoader","animationLoader","gltfLoader","GLTFLoader","fontLoader","name","file","loadAsync","onProgress","then","texture","textures","onError","files","Promise","resolve","positiveX","negativeX","positiveY","negativeY","positiveZ","negativeZ","load","toString","buffer","sounds","image","images","object","objects","material","materials","onLoad","animations","animation","gltf","fonts","filetype","event","nameString","prefix","prettySize","loaded","lengthComputable","percentLoaded","total","progressHandler","toFixed","error","errorHandler","message","TimerEntry","ticks","looping","ticksLeft","running","BOX_GEOMETRY_INDICES","Uint16Array","BOX_GEOETRY_VERTICES","EmptyCollisionMask","setIndex","setAttribute","_other","_box","_sphere","_ray","_point","_object","_scene","Entity","Map","mask","_isDestroyed","scene","remove","add","timers","set","other","isCollidingWith","onCreate","onDestroy","showMask","onDispose","timersFired","timer","isRunning","tick","push","onTimer","onStep","onDraw","AudioWrapper","getVolume","volume","setVolume","getLoop","loop","setLoop","isPlaying","stop","Area","Set","audioListener","_camera","newCamera","entity","newEntity","toCreate","from","allEntities","tag","taggedEntities","has","get","firstEntry","values","next","done","AudioBuffer","assets","getAudio","size","addEntityToArea","created","_create","tags","addTaggedEntityToMap","toDestroy","isDestroyed","removeEntityFromArea","_destroy","_dispose","removeTaggedEntityFromMap","_tickTimers","_step","renderer","overlay","_drawMask","render","getContext","width","height","clearRect","_draw","LocalStorage","key","window","localStorage","setItem","JSON","stringify","def","getItem","parse","removeItem","clear","ResourceManager","resources","resource","Game","gameCanvas","overlayCanvas","InputManager","canvas","_currentArea","focus","requestAnimationFrame","bind","nextArea","resizeCanvas","currentArea","_disposeEntities","_createEntities","_destroyEntities","_tickEntityTimers","_stepEntities","_drawScene","_clearKeyTick","_updateGamepad","_clearMouseTick","screenSize","clientWidth","clientHeight","displayWidth","displayHeight","setSize","randomFloat","min","random","pickRandomArray","newArray","collection","randomIndex","temp","clamp","x","Key","GamepadButton","GamepadAxis","KEY_MAP","Up","Down","Left","Right","Control","Alt","Delete","Backspace","CapsLock","Enter","Escape","End","Shift","PageUp","PageDown","Pause","Cancel","ScrollLock","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","Num0","Amperstand","Asterisk","At","BackSlash","BraceLeft","BraceRight","Caret","CloseBracket","Colon","Comma","Dollar","EqualSign","ExclamationPoint","GreaterThan","LeftParen","LessThan","Minus","Hashtag","OpenBracket","Period","QuestionMark","SingleQuote","DoubleQuote","RightParen","Semicolon","ForwardSlash","Underscore","Space","Tick","Tilda","MOUSE_MAP","Middle","GamepadState","gamepad","buttonsStart","buttonsDown","buttonsReleased","axes","buttons","addEventListener","onKeyDown","onKeyRelease","onGamepadConnected","onGamepadDisconnected","onMouseMove","onMouseDown","onMouseUp","onPointerLockClick","document","onPointerLockChange","onPointerLockError","keysDown","repeat","keysStart","keysReleased","mapping","gamepadState","fromGamepad","navigator","getGamepads","buttonKey","isNaN","Number","button","pressed","Object","assign","keys","axis","_pointerLockEnabled","enabled","exitPointerLock","mouseCoords","clientX","clientY","pointerLockElement","mouseMovement","movementX","movementY","mouseDown","mouseStart","mouseReleased","requestPointerLock","_event","_error","WALL_SCALE","WALL_HEIGHT","WALL_DEPTH","INSIDE_DEPTH","UNITS_WIDE","TOTAL_WIDTH","CAMERA_DIST_OUT","MOVEMENT_SPEED","ZOOM_SPEED","canvasWidth","canvasHeight","position","rotateY","PI","ClearMovementDelay","doorSelector","movedTo","aspect","updateProjectionMatrix","isKeyStarted","moveLeft","moveRight","canEnterDoor","zoomIn","movingTick","MoveLeft","MoveRight","ZoomIn","clearMovementDelay","moveCameraLeftTick","moveCameraRightTick","zoomInTick","z","clearTimer","enterDoor","alpha","FadeOutEffect","fade","abs","onTick","fadeIn","_alpha","onFinish","globalAlpha","fillRect","delay","fadeOut","TickTorch","currentTick","tickTorch","RestartGame","restartGame","intensity","setTorchIntensity","ARCH_HEIGHT","ARCH_WIDTH","SIDE_WIDTH","PLANE_GEOMETRY","LEFT_SIDE_MATERIAL","RIGHT_SIDE_MATERIAL","TOP_WALL_MATERIAL","LEFT_MINI_MATERIAL","RIGHT_MINI_MATERIAL","ARCH_MATERIAL","INSIDE_SIDE_MATERIAL","INSIDE_TOP_MATERIAL","TORCH_MATERIAL","FONT_MATERIAL","torchLights","buildMaterial","buildLeftSideTexture","buildRightSideTexture","buildTopTexture","buildLeftMiniTexture","buildRightMiniTexture","buildArchTexture","buildInsideSideTexture","buildInsideTopTexture","leftSideWall","rightSideWall","topWall","leftMiniCube","rightMiniCube","archObject","getObject","arch","geometry","leftInsideWall","rightInsideWall","topInsideWall","torch","copy","getFont","textGeometry","curveSegments","leftSideTransform","makeScale","multiply","makeRotationY","setPosition","setMatrixAt","rightSideTransform","topTransform","leftMiniTransform","rightMiniTransform","archTransform","leftInsideTransform","rightInsideTransform","topInsideTransform","makeRotationX","leftTorchTransform","rightTorchTransform","leftTorchLight","rightTorchLight","clone","computeBoundingBox","boundingBox","textWidth","textHeight","y","textMesh","rotation","instanceMatrix","needsUpdate","dynamicallyBuildTexture","repeatX","repeatY","offsetX","offsetY","imageName","suffix","textureName","hasTexture","getTexture","getImage","wrapS","wrapT","offset","saveTexture","forEach","torches","visible","centerTorches","leftTorches","rightTorches","brightness","dispose","buildTexture","normalMap","aoMap","BLANK_WALL_MATERIAL","buildWallTexture","wall","wallTransform","torchTransform","torchLight","GRAFFITI_MESSAGES","SOME_PRIMES","DEFAULT_OUTLINE","BUILT_IN_FONT_DETAILS","Underground","lowercaseOnly","noNumbers","outline","AAnotherTag","AAttackGraffiti","ADrippingMarker","BarrioRifa","noPunctuation","Bopollux","DJGross","noNewline","Elevenoone","GangBangCrime","Graffonti","ILostItInTheStreets","Insane","MuroSP","NeoBopollux","PixelRetroSP","RealBreakerz","Reskagraf","StreetStyle","FONT_COLORS","outlineColors","MIN_ANGLE","MAX_ANGLE","props","graffitiProps","generateValues","textTexture","loadFontFace","redraw","refreshGraffiti","normalCanvas","createElement","normalTexture","graffitiMaterial","transparent","graffitiPlane","generateTextTexture","TextTexture","relativeHeight","scale","refreshGraffitiNormalsTexture","bricks","leftOffset","topOffset","imageSmoothingEnabled","translate","rotate","drawImage","textHasNumber","test","textHasPunctuation","textHasNewline","hasNewline","allowedFontEntries","pickedFont","fontDetails","toLowerCase","fontColor","outlineColor","fontOutline","strokeWidth","strokeColor","PLANE_MATERIAL","unitsPerSide","WALL_OFFSET","BOX_GEOMETRY","SIDE_MATERIAL","side","computeSideOffset","body","appendChild","classList","errorOccured","all","loadImage","BrickColor","BrickNrm","BrickOcc","ArchBrickColor","ArchBrickNrm","ArchBrickOcc","loadTexture","DirtColor","DirtNrm","DirtOcc","loadGLTFFile","Arch","manager","saveObject","children","WallTorch","loadAudioFile","Ambient","loadFont","NumberFont","drawLoadingProgress","loadAllAssets","start","stack","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","___CSS_LOADER_URL_REPLACEMENT_2___","___CSS_LOADER_URL_REPLACEMENT_3___","___CSS_LOADER_URL_REPLACEMENT_4___","___CSS_LOADER_URL_REPLACEMENT_5___","___CSS_LOADER_URL_REPLACEMENT_6___","___CSS_LOADER_URL_REPLACEMENT_7___","___CSS_LOADER_URL_REPLACEMENT_8___","___CSS_LOADER_URL_REPLACEMENT_9___","___CSS_LOADER_URL_REPLACEMENT_10___","___CSS_LOADER_URL_REPLACEMENT_11___","___CSS_LOADER_URL_REPLACEMENT_12___","___CSS_LOADER_URL_REPLACEMENT_13___","___CSS_LOADER_URL_REPLACEMENT_14___","___CSS_LOADER_URL_REPLACEMENT_15___","___CSS_LOADER_URL_REPLACEMENT_16___","___CSS_LOADER_URL_REPLACEMENT_17___","___CSS_LOADER_URL_REPLACEMENT_18___","module","id","cachedTextDecoder","TextDecoder","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","Uint8Array","getStringFromWasm0","ptr","len","subarray","heap","heap_next","addHeapObject","obj","idx","takeObject","ret","dropObject","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","read","written","isLikeNone","current_number","hamming_distance","ptr0","malloc","realloc","mem","code","charCodeAt","slice","passStringToWasm0","len0","handleError","f","args","apply","getArrayU8FromWasm0","__wbindgen_json_parse","arg0","arg1","__wbg_randomFillSync_64cc7d048f228ca8","arg2","randomFillSync","arguments","__wbindgen_object_drop_ref","__wbg_getRandomValues_98117e9a7e993920","getRandomValues","__wbg_process_2f24d6544ea7b200","process","__wbindgen_is_object","val","__wbg_versions_6164651e75405d4a","versions","__wbg_node_4b517d861cbcb3bc","node","__wbindgen_is_string","__wbg_modulerequire_3440a4bcf44437db","__wbg_crypto_98fc271021c7d2ad","crypto","__wbg_msCrypto_a2cdb043d2bfe57f","msCrypto","__wbg_newnoargs_be86524d73f67598","Function","__wbg_call_888d259a5fefc347","call","__wbindgen_object_clone_ref","__wbg_self_c6fbdfc2918d5e58","self","__wbg_window_baec038b5ab35c54","__wbg_globalThis_3f735a5746d41fbd","globalThis","__wbg_global_1bc0b39582740e95","g","global","__wbindgen_is_undefined","__wbg_buffer_397eaa4d72ee94dd","__wbg_new_a7ce447f15ff496f","__wbg_set_969ad0a60e51d320","__wbg_length_1eb8fc608a0d4cdb","__wbg_newwithlength_929232475839a482","__wbg_subarray_8b658422a224f479","__wbindgen_throw","__wbindgen_memory","webpackEmptyContext","req","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","amdD","amdO","Symbol","queue","fn","r","a","hasAwait","currentDeps","outerResolve","reject","isEvaluating","nested","whenAll","deps","onResolve","onReject","dep","i","promise","rej","rejectFn","catch","result","wrapDeps","d","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","definition","o","defineProperty","enumerable","hmd","create","prop","prototype","hasOwnProperty","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","v","wasmModuleId","wasmModuleHash","importsObj","fetch","WebAssembly","instantiateStreaming","res","instance","arrayBuffer","bytes","instantiate","__webpack_exports__"],"sourceRoot":""}